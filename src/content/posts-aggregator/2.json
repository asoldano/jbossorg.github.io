{
  "title": "Keycloak 24.0.0 released",
  "link": "https://www.keycloak.org/2024/03/keycloak-2400-released",
  "author": [
    {
      "name": null,
      "avatar": null
    }
  ],
  "date": "2024-03-04T00:00:00.000Z",
  "feed_title": "Keycloak Blog",
  "feed_avatar": "https://www.gravatar.com/avatar/87fe00619f08c241da8dfb23d907ffa2?s=50",
  "content": "To download the release go to .   HIGHLIGHTS   SUPPORTED USER PROFILE AND PROGRESSIVE PROFILING  The user profile preview feature is promoted to be fully supported and user profile is enabled by default.  In the past months, the Keycloak team spent a huge amount of effort in polishing the user profile feature to make it fully supported. In this release, we continued the effort. Lots of improvements, fixes and polishing were done based on the thorough testing and feedback from our awesome community.  The following are a few highlights of this feature;   * Fine-grained control over the attributes that users and administrators can    manage so that you can prevent unexpected attributes and values from being    set.   * Ability to specify what user attributes are managed and should be displayed    on the forms to regular users or administrators.   * Dynamic forms - Previously, the forms where users created or updated their    profiles, contain four basic attributes like username, email, first name and    last name. The addition of any attributes (or removing some default    attributes) required you to create a custom theme. Now custom themes may not    be needed because users see exactly the requested attributes based on the    requirement of the particular deployment.   * Validations - Ability to specify validators for the user attributes including    built-in validators that you can use to specify a maximum or minimum length,    a specific regex, or limiting a particular attribute to be a URL or number.   * Annotations - Ability to specify that particular attribute should be rendered    for instance as a text area, an HTML select with specified options, or    calendar or many other options. You can also bind JavaScript code to a    specific field to change how an attribute is rendered and customize its    behavior.   * Progressive profiling - Ability to specify that some fields are required or    available on the forms just for particular values of scope parameter. This    effectively allow progressive profiling. You no longer need to ask the user    for twenty attributes during registration; you can instead ask the user to    fill in attributes incrementally according to the requirements of the    individual client applications that are used by the user.   * Migration from previous versions - The user profile is now always enabled,    but it operates as before for those who did not use this feature. You can    benefit from the user profile capabilities, but you are not required to use    them. For migration instructions, see the .  The first release of the user profile as a supported feature is just the starting point and the baseline for delivering many more capabilities around identity management.  We would like to give huge thanks to the awesome Keycloak community as lots of ideas, requirements and contributions came from the community! Special thanks to:   *    *    *    *    *    *    *    *   For more details about user profile capabilities, see the .  BREAKING CHANGES TO THE USER PROFILE SPI  In this release, changes to the User Profile SPI might impact existing implementations based on this SPI. For more details, see the .  CHANGES TO FREEMARKER TEMPLATES TO RENDER PAGES BASED ON THE USER PROFILE AND REALM  In this release, the following templates were updated to make it possible to dynamically render attributes based on the user profile configuration set to a realm:   * login-update-profile.ftl   * register.ftl   * update-email.ftl  For more details, see the .  NEW FREEMARKER TEMPLATE FOR THE UPDATE PROFILE PAGE AT FIRST LOGIN THROUGH A BROKER  In this release, the server renders the update profile page when the user is authenticating through a broker for the first time using the idp-review-user-profile.ftl template.  For more details, see the .   JAVA ADAPTER DEPRECATION AND REMOVAL  Back in 2022 we announced the . To give the community more time to adopt this .  With that in mind, this will be the last major release of Keycloak to include OpenID Connect and SAML adapters. As Jetty 9.x has not been supported since 2022 the Jetty adapter has been removed already in this release.  The generic Authorization Client library will continue to be supported, and aims to be used in combination with any other OAuth 2.0 or OpenID Connect libraries.  The only adapter we will continue to deliver is the SAML adapter for latest releases of WildFly and EAP 8.x. Reasoning for continuing to support this is down to the fact that the majority of the SAML codebase in Keycloak was a contribution from WildFly. As part of this contribution we agreed to maintain SAML adapters for WildFly and EAP in the long run.  JETTY ADAPTER REMOVED  Jetty 9.4 has not been supported in the community for a long time, and reached end-of-life in 2022. At the same time the adapter has not been updated or tested with more recent versions of Jetty. For these reasons the Jetty adapter has been removed from this release.   NEW WELCOME PAGE  The 'welcome' page that appears at the first use of Keycloak is redesigned. It provides a better setup experience and conforms to the latest version of . The simplified page layout includes only a form to register the first administrative user. After completing the registration, the user is sent directly to the Admin Console.  Figure 1. New welcome page with a simplified layout and registration form  If you use a custom theme, you may need to update it to support the new welcome page. For details, see the .   NEW ACCOUNT CONSOLE NOW THE DEFAULT  We introduced version 3 of the Account Console in Keycloak 22 as a preview feature. In this release, we are making it the default version, and deprecating version 2 in the process, which will be removed in a subsequent release.  This new version has built-in support for the user profile feature, which allows administrators to configure which attributes are available to users in the Account Console, and lands a user directly on their personal account page after logging in.  Figure 2. New Account Console with custom attributes  If you are using or extending the customization features of this theme, you may need to perform additional migrations. For more details, see the .   KEYCLOAK JS  USING EXPORTS FIELD IN PACKAGE.JSON  The Keycloak JS adapter now uses the in its package.json. This change improves support for more modern bundlers like Webpack 5 and Vite, but comes with some unavoidable breaking changes. See the for more details.  PKCE ENABLED BY DEFAULT  The Keycloak JS adapter now sets the pkceMethod option to S256 by default. This change enables Proof Key Code Exchange () for all applications using the adapter. If you use the adapter on a system that does not support PKCE, you can set the pkceMethod option to false to disable it.   CHANGES TO PASSWORD HASHING  In this release, we adapted the password hashing defaults to match the .  As part of this change, the default password hashing provider has changed from pbkdf2-sha256 to pbkdf2-sha512. Also, the number of default hash iterations for pbkdf2 based password hashing algorithms changed. This change means better security aligned with latest recommendations, but it has impact on performance. It is possible to stick to the old behaviour by adding password policies hashAlgorithm and hashIterations to your realm. For more details, see the .   OAUTH/OIDC RELATED IMPROVEMENTS  LIGHTWEIGHT ACCESS TOKENS SUPPORT  This release contains support for Lightweight access tokens. As a result, you can have smaller access tokens for specified clients. These tokens have only a few claims, which is why they are smaller. Note that lightweight access token is still JWT signed by the realm key by default and still contains some very basic claims.  This release introduces an Add to lightweight access token flag that is available on some OIDC protocol mappers. Use this flag to specify if a particular claim should be added to a lightweight access token. It is OFF by default, which means that most claims are not added.  Also, a client policy executor exists. Use it to specify if a particular client request should use lightweight access tokens or regular access tokens. An alternative to the executor is to use an Always use lightweight access token flag on client advanced settings, which causes that client to always use lightweight access tokens. An executor can be an alternative if you need more flexibility. For instance, you may choose to use lightweight access tokens by default but use regular tokens only for the specified scope parameter.  A previous release added an Add to token introspection switch. You use it to add claims that are not present in the access token into the introspection endpoint response.  Thanks to for the contribution and Thanks to for a help and review of this feature.  OAUTH 2.1 SUPPORT  This release contains optional OAuth 2.1 support. New client policy profiles were introduced in this release, which administrators can use to make sure that clients and particular client requests comply with the OAuth 2.1 specification. A dedicated client profile exists for confidential clients and a dedicated profile for public clients. Thanks to and for the contribution.  SCOPE PARAMETER SUPPORTED IN THE REFRESH TOKEN FLOW  Starting with this release, the scope parameter in the OAuth2/OIDC endpoint for token refresh is supported. Use this parameter to request access tokens with a smaller amount of scopes than originally granted, which means you cannot increase access token scope. This scope limitation does not affect the scope of the refreshed refresh token. This function works as described in the OAuth2 specification. Thanks to for the contribution.  CLIENT POLICY EXECUTOR FOR SECURE REDIRECT URIS  A new client policy executor secure-redirect-uris-enforcer is introduced. Use it to restrict which redirect URIs can be used by the clients. For instance, you can specify that client redirect URIs cannot have wildcards, should be just from specific domain, must be OAuth 2.1 compliant, and so on. Thanks to and for the contribution.  CLIENT POLICY EXECUTOR FOR ENFORCING DPOP  A new client policy executor dpop-bind-enforcer is introduced. You can use it to enforce DPoP for a particular client if dpop preview is enabled. Thanks to for the contribution.  SUPPORTING EDDSA  You can create EdDSA realm keys and use them as signature algorithms for various clients. For instance, you can use these keys to sign tokens or for client authentication with signed JWT. This feature includes identity brokering where Keycloak itself signs client assertions that are used for private_key_jwt authentication to third party identity providers. Thanks to and for the contribution.  EC KEYS SUPPORTED BY JAVAKEYSTORE PROVIDER  The provider JavaKeystoreProvider for providing realm keys now supports EC keys in addition to previously supported RSA keys. Thanks to for the contribution.  OPTION TO ADD X509 THUMBPRINT TO JWT WHEN USING PRIVATE_KEY_JWT AUTHENTICATION FOR IDENTITY PROVIDERS  OIDC identity providers now have the Add X.509 Headers to the JWT option for the situation when client authentication with JWT signed by private key is used. This option can be useful for interoperability with some identity providers such as Azure AD, which require the thumbprint to be present on the JWT. Thanks to for the contribution.  OAUTH GRANT TYPE SPI  The Keycloak codebase includes an internal update to introduce the OAuth Grant Type SPI. This update allows additional flexibility when introducing custom grant types supported by the Keycloak OAuth 2 token endpoint. Thanks to for the contribution.   CORS IMPROVEMENTS  The CORS related Keycloak functionality was extracted into the SPI, which can allow additional flexibility. Note that CorsSPI is internal and may change at a future release. Thanks to for the contribution.   TRUSTSTORE IMPROVEMENTS  Keycloak introduces improved truststores configuration options. The Keycloak truststore is now used across the server, including outgoing connections, mTLS, and database drivers. You no longer need to configure separate truststores for individual areas. To configure the truststore, you can put your truststores files or certificates in the default conf/truststores, or use the new truststore-paths config option. For details refer to the relevant .   VERSIONED FEATURES  Features now support versioning. To preserve backward compatibility, all existing features (including account2 and account3) are marked as version 1. Newly introduced features will use versioning, which means that users can select between different implementations of desired features.  For details refer to the .  KEYCLOAK CR TRUSTSTORES  You may also take advantage of the new server-side handling of truststores by using the Keycloak CR, for example:  spec:   truststores:     mystore:       secret:         name: mystore-secret     myotherstore:       secret:         name: myotherstore-secret  Currently only Secrets are supported.  TRUST KUBERNETES CA  The cert for the Kubernetes CA is added automatically to your Keycloak Pods managed by the Operator.   AUTOMATIC CERTIFICATE MANAGEMENT FOR SAML IDENTITY PROVIDERS  The SAML identity providers can now be configured to automatically download the signing certificates from the IDP entity metadata descriptor endpoint. In order to use the new feature, configure the Metadata descriptor URL option in the provider (the URL where the IDP metadata information with the certificates is published) and set Use metadata descriptor URL to ON. The certificates are automatically downloaded and cached in the public-key-storage SPI from that URL. The certificates can also be reloaded or imported from the Admin Console, using the action combo in the provider page.  See the for more details about the new options.   NON-BLOCKING HEALTH CHECK FOR LOAD BALANCERS  A new health check endpoint available at /lb-check was added. The execution is running in the event loop, which means this check is responsive also in overloaded situations when Keycloak needs to handle many requests waiting in request queue. This behavior is useful, for example, in multi-site deployment to avoid failing over to another site that is under heavy load. The endpoint is currently checking availability of the embedded and external Infinispan caches. Other checks may be added later.  This endpoint is not available by default. To enable it, run Keyloak with the multi-site feature. For more details, see .   KEYCLOAK CR OPTIMIZED FIELD  The Keycloak CR now includes an startOptimized field, which may be used to override the default assumption about whether to use the --optimized flag for the start command. As a result, you can use the CR to configure build time options also when a custom Keycloak image is used.   ENHANCED REVERSE PROXY SETTINGS  It is now possible to separately enable parsing of either Forwarded or X-Forwarded-* headers by using the new --proxy-headers option. For details, see the . The original --proxy option is now deprecated and will be removed in a future release. For migration instructions, see the .   CHANGES TO THE USER REPRESENTATION IN BOTH ADMIN API AND ACCOUNT CONTEXTS  In this release, we are encapsulating the root user attributes (such as username, email, firstName, lastName, and locale) by moving them to a base/abstract class in order to align how these attributes are marshalled and unmarshalled when using both Admin and Account REST APIs.  This strategy provides consistency in how attributes are managed by clients and makes sure they conform to the user profile configuration set to a realm.  For more details, see the .   SEQUENTIAL LOADING OF OFFLINE SESSIONS AND REMOTE SESSIONS  Starting with this release, the first member of a Keycloak cluster will load remote sessions sequentially instead of in parallel. If offline session preloading is enabled, those will be loaded sequentially as well.  For more details, see the .   PERFORMING ACTIONS ON BEHALF OF ANOTHER ALREADY AUTHENTICATED USER IS NOT LONGER POSSIBLE  In this release, you can no longer perform actions such as email verification if the user is already authenticated and the action is bound to another user. For instance, a user can not complete the verification email flow if the email link is bound to a different account.   CHANGES TO THE EMAIL VERIFICATION FLOW  In this release, if a user tries to follow the link to verify the email and the email was previously verified, a proper message will be shown.  In addition to that, a new error (EMAIL_ALREADY_VERIFIED) event will be fired to indicate an attempt to verify an already verified email. You can use this event to track possible attempts to hijack user accounts in case the link has leaked or to alert users if they do not recognize the action.   DEPRECATED OFFLINE SESSION PRELOADING  The default behavior of Keycloak is to load offline sessions on demand. The old behavior to preload them at startup is now deprecated, as pre-loading them at startup does not scale well with a growing number of sessions, and increases Keycloak memory usage. The old behavior will be removed in a future release.  For more details, see the .   CONFIGURATION OPTION FOR OFFLINE SESSION LIFESPAN OVERRIDE IN MEMORY  To reduce memory requirements, we introduced a configuration option to shorten lifespan for offline sessions imported into the Infinispan caches. Currently, the offline session lifespan override is disabled by default.  For more details, see the .   INFINISPAN METRICS USE LABELS FOR CACHE MANAGER AND CACHE NAMES  When enabling metrics for Keycloak’s embedded caches, the metrics now use labels for the cache manager and the cache names.  For more details, see the .   USER ATTRIBUTE VALUE LENGTH EXTENSION  As of this release, Keycloak supports storing and searching by user attribute values longer than 255 characters, which was previously a limitation.  For more details, see the .   BRUTE FORCE PROTECTION CHANGES  There have been a couple of enhancements to the Brute Protection:   1. When an attempt to authenticate with an OTP or Recovery Code fails due to     Brute Force Protection the active Authentication Session is invalidated. Any     further attempts to authenticate with that session will fail.   2. In previous versions of Keycloak, the administrator had to choose between     disabling users temporarily or permanently due to a Brute Force attack on     their accounts. The administrator can now permanently disable a user after a     given number of temporary lockouts.   3. The property failedLoginNotBefore has been added to the     brute-force/users/{userId} endpoint   AUTHORIZATION POLICY  In previous versions of Keycloak, when the last member of a User, Group or Client policy was deleted then that policy would also be deleted. Unfortunately this could lead to an escalation of privileges if the policy was used in an aggregate policy. To avoid privilege escalation the effect policies are no longer deleted and an administrator will need to update those policies.   KEYCLOAK CR CACHE-CONFIG-FILE OPTION  The Keycloak CR now allows for specifying the cache-config-file option by using the cache spec configMapFile field, for example:  apiVersion: k8s.keycloak.org/v2alpha1 kind: Keycloak metadata:   name: example-kc spec:   ...   cache:     configMapFile:       name: my-configmap       key: config.xml   KEYCLOAK CR RESOURCES OPTIONS  The Keycloak CR now allows for specifying the resources options for managing compute resources for the Keycloak container. It provides the ability to request and limit resources independently for the main Keycloak deployment via the Keycloak CR, and for the realm import Job via the Realm Import CR.  When no values are specified, the default requests memory is set to 1700MiB, and the limits memory is set to 2GiB.  You can specify your custom values based on your requirements as follows:  apiVersion: k8s.keycloak.org/v2alpha1 kind: Keycloak metadata:   name: example-kc spec:   ...   resources:     requests:       cpu: 1200m       memory: 896Mi     limits:       cpu: 6       memory: 3Gi  For more details, see the .   TEMPORARY LOCKOUT LOG REPLACED WITH EVENT  There is now a new event USER_DISABLED_BY_TEMPORARY_LOCKOUT when a user is temporarily locked out by the brute force protector. The log with ID KC-SERVICES0053 has been removed as the new event offers the information in a structured form.  For more details, see the .   UPDATES TO COOKIES  Cookie handling code has been refactored and improved, including a new Cookie Provider. This provides better consistency for cookies handled by Keycloak, and the ability to introduce configuration options around cookies if needed.   SAML USER ATTRIBUTE MAPPER FOR NAMEID NOW SUGGESTS ONLY VALID NAMEID FORMATS  User Attribute Mapper For NameID allowed setting Name ID Format option to the following values:   * urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName   * urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName   * urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos   * urn:oasis:names:tc:SAML:2.0:nameid-format:entity  However, Keycloak does not support receiving AuthnRequest document with one of these NameIDPolicy, therefore these mappers would never be used. The supported options were updated to only include the following Name ID Formats:   * urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress   * urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified   * urn:oasis:names:tc:SAML:2.0:nameid-format:persistent   * urn:oasis:names:tc:SAML:2.0:nameid-format:transient   DIFFERENT JVM MEMORY SETTINGS WHEN RUNNING IN CONTAINER  Instead of specifying hardcoded values for the initial and maximum heap size, Keycloak uses relative values to the total memory of a container. The JVM options -Xms, and -Xmx were replaced by -XX:InitialRAMPercentage, and -XX:MaxRAMPercentage.  For more details, see the guide.   GELF LOG HANDLER HAS BEEN DEPRECATED  With sunsetting of the providing integration with GELF, Keycloak will no longer support the GELF log handler out-of-the-box. This feature will be removed in a future release. If you require an external log management, consider using file log parsing.   UPGRADING  Before upgrading refer to for a complete list of changes.   ALL RESOLVED ISSUES   NEW FEATURES   * RestAPI endpoint \"send-verify-email\" sending execute actions email template.    admin/api  * @keycloak/keycloak-admin-client doesn't provide an ability to use optional    client scope for access token admin/client-js  * User profile attributes should only accept a single value unless configured    otherwise user-profile  * Implement POST logout in Keycloak JS adapter/javascript  * CORS SPI oidc  * Introduce new CLI config options for Infinispan remote store dist/quarkus  * Encrypt network communication in JGroups dist/quarkus  * Update Route53 HA guide to be compatible with ROSA and Openshift 4.14.x  * Create new landing page for admin console  * Issue Verifiable Credentials in the JWT-VC format core  * Remove conditional statements about Windows / Linux from the docs docs  * OAuth 2.0 Grant Type SPI oidc  * Supported option to specify maximum threads used to handle HTTP requests    dist/quarkus  * Supported option to specify resource management for pods in Keycloak CR    dist/quarkus  * Support custom Infinispan configuration file in Keycloak CR operator  * Supported option to specify site name for multi-site deployments dist/quarkus  * Cookie Provider  * Support EC Key-Imports for the JavaKeystoreKeyProvider  * Meta description of admin-ui and account-ui cannot be changed in    theme.properties   ENHANCEMENTS   * Rename \"Resident key\" to \"Discoverable Credential\" docs  * User attributes with a text more than 255 characters storage  * Add truststore options to Keycloak CR operator  * Support importing Kubernetes CA operator  * Support for scope parameter in the refresh flow oidc  * Align Operator config naming with Quarkus distribution operator  * Add X509 thumbprint to JWT when using private_key_jwt oidc  * --verbose option doesn't work in Quarkus distribution dist/quarkus  * Add EdDSA/Ed25519 to WebAuthn Signature algorithms authentication/webauthn  * Supporting EdDSA oidc  * Increase the default iterations for Pbdkdf2-256/512 to match the updated    OWASP recommendations authentication  * Add failedLoginNotBefore field to existing brute force detection status API  * Admin-UI: Show realm display name in realm drop down instead of realm id if    available admin/ui  * Add \"amr\" to already implemented \"acr\" support  * Disable Groovy Closures when bootstrapping Picocli dist/quarkus  * Role mapping tab no longer visible when using fine grained permissions after    upgrade from 20.0.3 to 21.0.2 admin/ui  * Identity providers: pagination in admin console  * Upgrade welcome theme to PatternFly 5 welcome/ui  * Provide raw OpenAPI specification alongside Keycloak Admin REST API html    documentation  * Scope parameter in Oauth 2.0 token exchange  * List reload button for admin panel admin/ui  * Query users by 'LDAP_ID' is not working ldap  * Use Infinispan BOM instead of direct Infinispan dependencies storage  * Localization tabs admin/ui  * Allow user to select between `Forwarded` or `X-Forwarded-*` header  * Docs:    authorization_services/topics/service-authorization-obtaining-permission.adoc    authorization-services  * Use upstream Quarkus functionality for non-blocking probes dist/quarkus  * User profile configuration scoped to user-federation provider user-profile  * Changes in declarative user profile should result in admin events    user-profile  * Map Store Removal: Delete map profiles from testsuite storage  * Map Store Removal: Delete container providers that were added to the base    testsuite storage  * Map Store Removal: Delete Profile.Feature.MAP_STORAGE and all its usages    storage  * Map Store Removal: Delete GlobalLockProvider storage  * Map Store Removal: Rename Legacy* classes storage  * Map Store Removal: Revert deprecated modules in model/legacy and rename    \"legacy\" to \"storage\" storage  * Add config property to specify a list of truststores  * Cache stampede after client invalidation storage  * Parse default UserProfile configuration in the build time  * Allow selecting attributes from user profile when managing token mappers    user-profile  * Enhance error logs and error events during UserInfo endpoint and Token    Introspection failure  * Accessibility of 2FA method selection login/ui  * UMA 2 not evaluating as expected when using permission tickets    authorization-services  * Query on update the ADFS FederationMetadata.xml on the keycloak instead of    delete and recreating the IDP config #24310 saml  * Map Store Removal: Revert changes related to map store in test classes in    base testsuite storage  * Features versioning  * Map Store Removal: Remove `LockObjectsForModification` storage  * Add truststores to keycloak cr  * Initialize Infinispan earlier in the build chain dist/quarkus  * Add polish translations admin/ui  * Avoid deprecated API usage in testsuite/integration-arquillian/tests/base    core  * Add Polish Translations to Account UI account/ui  * Update Kerberos provider for user-profile user-profile  * Update SSSD provider for user-profile user-profile  * Remove product from server info admin/ui  * Add a test for the LoadBalancerCheck  * Decouple \"factory\" methods from the \"provider\" methods on UserProfileProvider    implementation user-profile  * Replace the existing themes with the dynamic templates from user profile    user-profile  * Documentation about Australia Consumer Data Right security profile  * Add missing Arabic messages  * Upgrade Infinispan to 14.0.21.Final  * Map Store Removal: Remove protostream dependency storage  * Deprecate offline session preloading infinispan  * Map Store Removal: Revert changes made to backchannelLogout storage  * Map Store Removal: Remove ResponseSessionTask storage  * Supporting OAuth 2.1 for confidential clients oidc  * Client policies : executor for enforcing DPoP oidc  * Supporting OAuth 2.1 for public clients oidc  * Tests for client scopes/evaluate tab are missing  * Extra tests for realm roles  * Enable concurrent remote operations for Infinispan storage  * Implements attributes field in KeycloakProfile interface admin/client-js  * Adapt incremental build for latest changes in themes module ci  * Describe how to use Infinispan Batch CRs for automation with the external    Infinispan storage  * Update UserProfileProvider.setConfiguration to accept UPConfig instead of    String  * Add extra tests for realm-settings in admin-ui  * Client policies: executor for validate and match a redirect URI oidc  * Keycloak native implementation of SD-JWT core  * [Admin UI] Allow to customize built-in components administration UI via    ConfiguredProvider  * More info on UserProfileContext user-profile  * Tooltips improvements when configuring user profile attribute user-profile  * X509 client certificate login label extends out of form login/ui  * Ability to declare a default \"First broker login flow\" per Realm  * Make the `user` attribute available to the `idp-review-user-profile.ftl`    template  * RealmResourceProvider is not working as expected since version 23.0.0 core  * Admin UI: Show realm display name on welcome page admin/ui  * Could not format default value for log formats dist/quarkus  * Make more clear in the documentation that the wait time is only increased on    multiples of the max number of failures docs  * Create Infinispan metrics with labels instead of long metric names  * Missing localization of cs+sk messages  * User profile attribute names with strange characters docs  * Enable verify-profile required action by default user-profile  * Reduce internal unsupported options in the Keycloak HA documentation  * Change RHDG references to Infinispan  * Do not use raw parameterized PropertyMapper dist/quarkus  * Migration docs for https://github.com/keycloak/keycloak/issues/15190 docs  * Permanently lock users out after X temporary lockouts during a brute force    attack authentication  * Comprehensive log for the LoggingDistTest and Quarkus IT testsuite  * Don't differentiate Windows for getting started docs  * Use `--http-max-queued-requests` option in Keycloak HA documentation docs  * Do not use general debug log level for tests testsuite  * Fully remove reasteasy-core  * Allow formating numbers when rendering attributes user-profile  * Remove unused HttpResponse.setWriteCookiesOnTransactionComplete  * Improve wording in Concepts for configuring thread pools section in    documentation  * Remove support for old cookie path  * Implement stricter controls at token endpoint for PKCE verification  * Remove support for multiple AUTH_SESSION_ID cookies  * Documentation for verify-profile required action enabled by default docs  * Add missing Arabic translations translations  * Ability to have alternative default user-profile configuration user-profile  * Map Store Removal: Remove `RealmModel` from authorization services interfaces    storage  * Do we need to hide \"required\" settings for email? user-profile  * Upgrade liquibase to 4.25.1  * Improve UX of read-only attributes user-profile  * Documentation for SuppressRefreshTokenRotationExecutor oidc  * Allow Case-Insensitive Search on Provider Info Page in Admin UI admin/ui  * Map Store Removal: deprecate model legacy module storage  * Brute force detection should issue event for temporary lockout core  * Documentation for default validation changes due user-profile enabled docs  * Remove explicitly set `lit-element` version dist/quarkus  * Update Maven dependency versions for docs docs  * Upgrade to Quarkus 3.7.1 dist/quarkus  * Add Multi-AZ Aurora DB to CI store-integration-tests  * Update documentation to use new Infinispan configuration options  * Update HA guide about non-blocking probes docs  * Shorter lifespan for offline session cache entries in memory storage  * Upgrade to embedded Infinispan 14.0.24 storage  * Use version specific tag for Keycloak images in the docs docs  * Upgrade to Quarkus 3.8 dist/quarkus  * User profile: Add regression test for select inputs  * Keycloak Operator should add service-ca.crt to the truststore operator  * Upgrade to Quarkus 3.7.2 dist/quarkus  * doc: add a clear mention in the documentation about the storage of the    refresh and access token docs  * Use latest OLM version for Operator CI testsuite  * Ignore unrecognized truststore formats if `--truststore-paths` is a directory    dist/quarkus  * Aurora Postgres IT: Upload flaky and surefire test reports  * Upgrade to Quarkus 3.7.3 dist/quarkus  * Add Amazon Aurora PostgreSQL to the list of tested databases  * Update Keycloak HA Guide new resource limit settings  * Remove the preview note from Keycloak's HA guide  * \"Open ID Connect\" in docs / UIs should be \"OpenID Connect\"  * Add New User Registration Option on WebAuthn Authentication UI    authentication/webauthn  * Remove references to Quarkus docs and absolute URLs from HA Guide docs  * Use AWS JDBC Wrapper in CI tests  * Add warning about too long attribute values  * Distinguish user registration action label from the security key registration    action's one authentication/webauthn  * Replace \"Security Key\" with \"Passkey\" in WebAuthn UIs and their documents    authentication/webauthn  * Allow overriding the default validators added to attributes user-profile  * Tweak the default memory request and limit in the Operator operator  * a11y improvements on login page  * Upgrade to Quarkus 3.7.4 dist/quarkus  * Add option to clients to use lightweight access token oidc  * Upgrade to Infinispan 14.0.25  * Allow option of using client_id instead of id_token_hint with RP-initiated    logout in brokered IDP config/call. identity-brokering  * Change docker image to container image  * Remove RHSSO product documentation from upgrading guide docs  * Edit Keycloak 24.0 release notes docs  * Harmonize behaviour of different CertificateUtilsProvider implementations  * Edit Keycloak 23.x Release Notes  * Edit Keycloak 24 Upgrade guide   BUGS   * Remove Infinispan workarounds introduced to prevent deadlocks storage  * Event for MISSING_REQUIRED_DESTINATION with idp brokering incorrectly says    error is related to logout even for a login response saml  * Encoded token stored as KC_RESTART cookie uses weak algorithm- HS256    authentication  * Issue when using DenyAuthenticator in direct-grant flow authentication  * Multiple failures in OfflineServletsAdapterTest (testServlet,    testServletWithConsent, testServletWithRevoke) testsuite  * HTTP Redirect 303 to wrong URL (in case port is not 80) when trailing slash    is not added dist/quarkus  * Mail verification isn't working for multiple accounts in one session (only on    auto login by clicking the verification mail, not by logging in with the    credentials) authentication  * Incorrect handling of OptionParserException in kcadm admin/cli  * UPDATED_PASSWORD user action shouldn't be triggered when login with linked    IdP user-profile  * Removing the Realm ID and saving causes the realm to be vanished from the    list of the realms admin/api  * token-exchange does apply clientScopes of the origin client token-exchange  * Error on starting keycloak when foldername contains \")\" using kc.bat.    dist/quarkus  * Allow configuration cookies with `SameSite=Strict` for better compliance with    strict regulations and standards authentication  * When choosing resources in scope-based permission, multiple resource can be    selected but only one will be visable admin/ui  * Control redirect after password reset core  * During password reset, the baseURL is not shown on the info page after    browser restart authentication  * Realm import stack overflow import-export  * Brute Force Detection is disabled when updating frontenUrl via admin client    authentication  * Context path missing in URL on OTP page to switch between QR code and manual    code core  * v 22.0.0 - when creating a new realm the registration flow does not have    terms and conditions step core  * Unable to use `admin/cli  * Flaky test:    org.keycloak.testsuite.model.session.OfflineSessionPersistenceTest#testPersistenceClientSessionsMultipleNodes    storage  * Common resources in Welcome page didn't resolve correctly welcome/ui  * Localization: Admin UI doesn't pick up message bundles from realms other than    master admin/ui  * User profile attributes not localized in account console V3 user-profile  * Description of \"Configuring sources for Keycloak\" inconsistent / misleading    docs  * Docs: server_development/topics/identity-brokering.adoc docs  * Implementing custom ClientAuthenticator loses access to Client Secret Input    Field in the Admin UI admin/ui  * Flaky test:    org.keycloak.testsuite.forms.RecoveryAuthnCodesAuthenticatorTest#test03AuthenticateRecoveryAuthnCodes    authentication  * Invalid redirect uri when identity provider alias has spaces    identity-brokering  * Flaky test:    org.keycloak.testsuite.model.session.OfflineSessionPersistenceTest#testPersistenceMultipleNodesClientSessionAtSameNode    ci  * KeycloakErrorHandler NullPointerException String.toLowe rCase() because    message is null authentication  * Undocumented change in priority of X-Forwarded-* headers as of Quarkus    distribution core  * Flaky test:    org.keycloak.testsuite.admin.concurrency.ConcurrencyTest#testAllConcurrently    storage  * NoSuchFileException with ${kc.home.dir} on Windows dist/quarkus  * Realm client update via PUT returns invalid registration_client_uri with    duplicated client ID in address admin/api  * New Install with MySQL failing with REALM_SOCIAL_CONFIG ADD issue storage  * Audience is lost after refreshing a RPT authorization-services  * Default-Value in UI for krbPrincipalAttribute is error prone admin/ui  * Account v3 theme - Localization not working on account console account/ui  * Failure: FipsDistTest ci  * Group members are displayed incorrectly when using LDAP in READ_ONLY mode    admin/api  * Selected locale is not taking into accoun in `keycloak.v3 account` theme    account/ui  * LDAP user mapper for username: user appears twice in the GUI ldap  * Unable to locate entity descriptor:    org.keycloak.examples.domainextension.jpa.Company core  * NPE in User Session Note mapper on Token Exchange token-exchange  * admin-fine-grained-authz + client authorization settings requires view-client    role admin/ui  * Refresh request ignores scope parameter from refresh request oidc  * Keycloak operator tries to manipulate Secret which is not managed by Keycloak    operator  * Adding scopes via registration_client_uri does not work when using Dynamic    Client Registration admin/api  * UpdateUserLocaleAction does not trigger EventType.UPDATE_PROFILE event    user-profile  * Keycloak fails to start when uninstalling custom provider dist/quarkus  * Tabbing is not working in forms inside dropdown admin/ui  * NullPointerException when key is not available in the database oidc  * Reopening 2 - CVE-2023-21971 - Update Connector/J to 8.0.33 dependencies  * Deadlock when pre-loading remote sessions from external Infinispan storage  * Leaving Single Sign Out page open for too long and then confirming logout    leads to error page authentication  * Upgrade testsuite to use SpringBoot 2.7 ci  * Deleting a User or User Group might cause that all users suddenly get the    permissions of the deleted user. authorization-services  * SAML decryption fails if keycloak.saml.deprecated.encryption flag is set saml  * Mapper Option \"Add to access token\" Toggled Off Despite Claim Added to Token    admin/ui  * Improve LDAP Condition implementations ldap  * Keycloak Admin UI - Help text not localized in Realm Events Setting UI    admin/ui  * Importing Keycloak breaks typescript in esModule adapter/javascript  * OpenAPI spec doesn't match the admin API admin/api  * Keycloak not able to handle multiple validating X509 certificates when public    key are the same saml  * The `DefaultActionToken` serializes a JSON Object with duplicate keys oidc  * `getMultiPartFormParameters()` always returns `EmptyMultivaluedMap` after    upgrade to Resteasy Reactive core  * Client redirect_uri check must be compared using exact string matching oidc  * Make password visibility css classes configurable for themes login/ui  * Typo in the balloon help of SAML Username Template Importer core  * Incomplete Spanish translations for Admin UI translations  * Unexpected Application Error when clicking \"Cancel\" on user creation page    admin/ui  * Read Only Access of the realm users' \"Role mapping\" tab is broken for Admin    Console admin/ui  * fix debug log string core  * Log Injection during WebAuthn authentication/registration authentication  * Meaning of briefRepresentation query parameter is inverted in    GroupResource.getSubGroups admin/api  * User Profile attribute with \"Options\" shows options of another attribute if    none set on it user-profile  * RealmAdminResource.getGroupByPathGroup does not work with space in path    parameter admin/api  * Make sure username is lowercase when normalizing attributes user-profile  * NullPointerException thrown for UPConfig.getGroups() user-profile  * GH Actions -> Keycloak CI -> MSSQL docker images fails during startup ci  * CIBA and PAR are broken since 23.0.0 (NPE) when using http protocol oidc  * Unable to start after updating Docker container dist/quarkus  * Social Login Tests unable to retrieve Federated Access Token from user    session testsuite  * Kerberos principal attribute not found on LDAP user - even if kerberos    authentication is off ldap  * Warning \"Event object wasn't available in remote cache\" when using remote    store  * Admin Console: Realm Dropdown should only show the realms the user has access    to admin/ui  * Avoid keycloak-admin-client in UI to call admin console UI extension admin/ui  * Confusing error message by pr-backport.sh when not authenticated to gh ci  * Key provider UI issue while saving - RSA admin/ui  * Clean up translations for DE/EN/NL for a first test-run of Weblate    translations  * Admin cli failing when adding roles to a 3rd group in a list admin/cli  * Unnecessary user profile metdata sent on user update user-profile  * User Profile: If required roles (\"user\") and reqired scopes are set, the    required scopes have no effect user-profile  * Account v3 theme - theme.properties Custom theme scripts not loading    account/ui  * Deleting an atribute from the UI is reseting the unmanaged attribute policy    user-profile  * Post Logout Redirect URIs \"+\" behavior is inconsistent with other usages    (i.e. Web Origins) oidc  * OpenAPI: POST for /admin/realms response is 201 admin/api  * Failure in SSSDUserProfileTest.test05MixedInternalDBUserProfile testsuite  * iss not returned as query param in redirect to app when using \"prompt=none\"    and user is not authenticated oidc  * OpenAPI: POST /admin/realms/{realm}/clients response is 201 admin/api  * OpenAPI: Client authz endpoints without responses admin/api  * Translations missing in user details role mapping admin/ui  * Parsing of labels issue IDs doesn't work with colons and the \"fixes\" keyword    ci  * \"Disable realm?\" displayed when disabling client admin/ui  * Failure in KeycloakDistConfiguratorTest's 'missingHostname' check testsuite  * OpenAPI: In ClientRepresentation the property    oauth2DeviceAuthorizationGrantEnabled was not known by the API. admin/api  * OpenAPI: POST /admin/realms/{realm}/clients-initial-access response is 201    admin/api  * Incorrect version of the fix in release notes  * Removing all group attributes no longer works with keycloak-admin-client    (java) admin/client-java  * `/admin/realms/{realm-name}/ui-ext/realms` endpoint leaks realms the user    doesn't have access to see admin/ui  * Flaky test Job URL missing on some runs ci  * Custom Validator is never executed when UserProfileContext is UPDATE_EMAIL    user-profile  * Flaky test:    org.keycloak.testsuite.adapter.servlet.OfflineServletsAdapterTest#testServlet    ci  * /admin/realms/{realm}/groups Endpoint is slow admin/api  * Using kcadm.sh create components result to 400 Bad Request admin/cli  * [CI] Store Model Tests failures - UserSessionProviderOfflineModelTest,    OfflineSessionPersistenceTest, UserSessionInitializerTest storage  * Backchannel logout token is missing the \"exp\" claim oidc  * Since 23, start-dev command line arguments parsing is buggy dist/quarkus  * User events: labels overlap content admin/ui  * admin ui uses hyphen instead of dot as realm attribute separator admin/ui  * Timeouts after upgrade of download action v4 ci  * HTML emails in Catalan don't contain links translations  * ldap-group-mapper fails when empty member: attribute is present ldap  * Optimize handling of terms and conditions during registration core  * Test suite depends on artifacts built only when distribution profile is    active ci  * Keycloak HA Guide uses token for cross-site setup that expires  * LDAP federation reports \"Creating new LDAP Store...\" on every login ldap  * UI crash after using breadcrumb group navigation during an active group    search admin/ui  * On invalid submission, IdpUsernamePasswordForm sends back the user to the    standard UsernamePasswordForm template authentication  * Declartive user profile. When multiple attributes with options validator are    defined and 1 is selected on UI shown that 2 of them have values.    user-profile  * Masthead tests fail often admin/ui  * Native SQL Schema names broken on MySQL storage  * No error message displayed when trying to add read-only attribute to some    user in `Attributes` tab user-profile  * Force reauthentication is ignored during identity brokering when mapping    between OIDC and SAML protocols saml  * GitHub Status check is green if the build fails ci  * `mvn clean` does not work in js directory account/ui  * Duplicate tooltip/label for refresh button on device activity page account/ui  * subgroups clickopen not working admin/ui  * Subgroups-check is incorrect, and therefore subgroups are not clickable    admin/ui  * Name ID Format field is confusing for User Attribute Mapper For NameID saml  * Configure OTP Form regenerates Secret on reload authentication  * Attempting to update settings for realm with \"dots\" in the name fails due to    client side validation admin/ui  * Various Localization tab issues  * Next time you start message references the wrong command dist/quarkus  * Rest custom JAX-RS resource in kc 23: Method not allowed core  * Localization: Realm overrides subtab admin/ui  * Localization: Effective message bundles subtab admin/ui  * Keycloak JavaScript CI: client_scopes_test.spec.ts ci  * A11y critical violation in ProviderId form field admin/ui  * KC_DB_DRIVER is not propagated properly admin/cli  * Invalidate authentication session on repeated OTP failures authentication  * Invalidate authentication session on repeated Recovery Code failures    authentication  * With fine grained permissions enabled, the grouptree rights check is not    working correctly admin/ui  * keycloak-admin-client missing recent changes to group query parameters    admin/client-js  * Ensure community-maintained translations are not part of product build    account/ui  * Importing Realm with declarative user profile attributes fails user-profile  * Incorrect example in the Keycloak operator configuration operator  * Workflow failure: FIPS IT -    KcSamlEncryptedIdTest#testEncryptedElementIsReadableInDeprecatedMode ci  * Incomplete Chinese Translation for Login Page translations  * Error when migrating from a realm where the user profile component does not    hold any entry in the configuration user-profile  * Reset credentials action fails when triggered from first broker login flow    identity-brokering  * HTTP status code 413 Request Entity Too Large for large SAMLResponse since    Keycloak 23 saml  * Resource and permission titles missing for a new client admin/ui  * Bind flow modal broken admin/ui  * Write tests to cover binding a flow testsuite  * Fix more A11y violations admin/ui  * Apparently incorrect tooltip on \"type\" field for a \"resource\" in a client    admin/ui  * Search dialog for authorization policy is wrong? admin/ui  * Workflow failure: Quarkus IT -    FipsDistTest#testUnsupportedHttpsPkcs12KeyStoreInStrictMode ci  * The role Unassign button enabled in admin console even if no roles are    selected admin/ui  * Labels for WebAuthN missing in Account Console account/ui  * More A11y Violations Detected admin/ui  * Workflow failure: Admin UI E2E - realm_test.spec.ts ci  * Typo in disable dialog admin/ui  * Duplicate `key` for credentials on sign in page account/ui  * Failed to link identity broker to user with a verified email by IdP email    verification flow identity-brokering  * Labels for WebAuthN Passwordless missing in Account Console account/ui  * Operator CSV uses wrong format for `createdAt` field operator  * Row remains selected when \"cancel\" clicked on deleting translation in the    Localization/Realm Overrides tab admin/ui  * \"Test connection\" on LDAPS URI does not test TLS handshake admin/api  * SPI-truststore-file-type option appears to be invalid docs  * Update Keycloak sizing guide after change of default hashing configuration    core  * Failed to link the user with an existing read-token role from the federation    provider when AddReadTokenRoleOnCreate was enabled for the IdP. storage  * Workflow failure: Quarkus IT -    FipsDistTest#testUnsupportedHttpsPkcs12KeyStoreInStrictMode ci  * Mysterious settings changes due to Keycloak cluster changes admin/ui  * Issues related to IDNHomographValidator user-profile  * User details locale select broken in realm specific admin console admin/ui  * Infinite loop during X509 authentication authentication  * Keycloak UI meets \"Internal Sever Error\" after save \"Refresh Token Max Reuse\"    number core  * Arc container is null dist/quarkus  * allow sending realm in request without changing the kc admin object    admin/client-js  * Wrong delete messages in Realm overrides admin/ui  * CLIENT_ATTRIBUTES index idx_client_att_by_name_value no longer exists since    KC 20 (postgres) storage  * Keycloak HA guide with blank and callout docs  * Account UI ships too much Beer in user attributes user-profile  * Immediately reflect flow binding status on flow definition page in Admin UI    when binding an auth flow admin/ui  * Replace \"message bundle\" text to \"translation\" in realm overrides admin/ui  * PhantomJS does not send secure cookies over http://localhost core  * [keycloak.js] useNonce parameter is all-or-nothing adapter/javascript  * Disallow removing required filters when searching for effective message    bundle. admin/ui  * Unable to modify access token lifespan at realm level. Keycloak stops    working. core  * Wrong help for \"Create initial access token\" expiration field admin/ui  * Not possible to build documentation after quarkus upgrade docs  * When creating a user federation mapper changing the type doesn't change User    Roles Retrieve Strategy admin/ui  * User Profile Applies Validation To Service Account Users user-profile  * Auto layout of authenticator flow graph only applies the second time admin/ui  * Tooltip for attribute name in user-profile configuration is incorrect    user-profile  * Empty error message when validation issue due the    PersonNameProhibitedValidator validation user-profile  * Accessing userinfo fails with CORS when token is expired or session is    deleted oidc  * Workflow failure: Operator IT on OpenShift ci  * User profile 'uri' validator not working user-profile  * Keycloak server admin docs needs change with the new hashing iteration    changes docs  * bug in operator example yaml operator  * Freemarker erroneously escapes/sanitizes URL in template.ftl (&) login/ui  * Duplicate \"Refresh\" buttons present in admin-ui admin/ui  * Disabling \"Reset OTP\" in \"Reset credentials\" flow throws error on \"forgot    password\" authentication  * Fixing anchors in security apps guide in prod profile docs  * Remove custom user attributes section in server developer guide user-profile  * Once all default client scopes are deleted from the realm we can't create a    new custom role. core  * When loading entries from a remote store at startup, no lifespan or expiry is    set core  * Roles admin REST API for creating roles: Composite roles are expanded    admin/api  * Group not found in list after creation core  * Refresh doesn't work in Localization/Effective message bundles admin/ui  * Unable to approve/deny permission requests account/ui  * Having read-only attributes stored at a user leads to validation warning on    every login user-profile  * Cache Keys for Group pagination and other entries cannot be invalidated and    updated infinispan  * Microsoft social login failure testsuite  * Workflow failure: Keycloak CI - Store IT (aurora-postgres) ci  * Users with fine-grained permissions can not create a user admin/ui  * Locale selector is unnecessarily visible without rights to locales admin/ui  * Default locale is set to null when not explicitly choosing a locale admin/ui  * Newly created authentication subflow is always disabled admin/ui  * Cannot update email in account console with `update-email` feature enabled    account/ui  * Account console not working when lightweight-access-tokens used oidc  * AuthorityKeyIdentifierExtension should be calculated from caCert (if it    present) in generateV3Certificate, not from subjPubKeyInfo core  * FolderTheme does not support Locales with extensions core  * AWS JDBC driver throws ConcurrentModificationException storage  * Check for duplicated usernames and emails when Login with email option is    enabled user-profile  * Server admin guide not building downstream due to missing IDs docs  * Workflow failure: Admin UI E2E - realm_settings_user_profile_enabled admin/ui  * Secure Redirect URI executor issues oidc  * Workflow failure: Keycloak CI - OAuth 2.0 Grant Type SPI ci  * JavaDocs generation broken after removal of resteasy-core  * Apply remote store workaround also for configuration via CLI options  * OAuth 2.1 default profile lacks oauth-2-1-compliant setting for    SecureRedirectUrisEnforcerExecutor oidc"
}