{
  "title": "Keycloak 25.0.0 released",
  "link": "https://www.keycloak.org/2024/06/keycloak-2500-released",
  "author": [
    {
      "name": null,
      "avatar": null
    }
  ],
  "date": "2024-06-10T00:00:00.000Z",
  "feed_title": "Keycloak Blog",
  "feed_avatar": "https://www.gravatar.com/avatar/87fe00619f08c241da8dfb23d907ffa2?s=50",
  "content": "To download the release go to .   HIGHLIGHTS   ACCOUNT CONSOLE V2 THEME REMOVED  The Account Console v2 theme has been removed from Keycloak. This theme was deprecated in Keycloak 24 and replaced by the Account Console v3 theme. If you are still using this theme, you should migrate to the Account Console v3 theme.   JAVA 21 SUPPORT  Keycloak now supports OpenJDK 21, as we want to stick to the latest LTS OpenJDK versions.   JAVA 17 SUPPORT IS DEPRECATED  OpenJDK 17 support is deprecated in Keycloak, and will be removed in a following release in favor of OpenJDK 21.   MOST OF JAVA ADAPTERS REMOVED  As stated in the release notes of previous Keycloak version, the most of Java adapters are now removed from the Keycloak codebase and downloads pages.  For OAuth 2.0/OIDC, this includes removal of the Tomcat adapter, WildFly/EAP adapter, Servlet Filter adapter, KeycloakInstalled desktop adapter, the jaxrs-oauth-client adapter, JAAS login modules, Spring adapter and SpringBoot adapters. You can check for the list of some alternatives.  For SAML, this includes removal of the Tomcat adapter and Servlet filter adapter. SAML adapters are still supported with WildFly and JBoss EAP.  The generic Authorization Client library is still supported, and we still plan to support it. It aims to be used in combination with any other OAuth 2.0 or OpenID Connect libraries. You can check the for some examples where this authorization client library is used together with the 3rd party Java adapters like Elytron OIDC or SpringBoot. You can check the quickstarts also for the example of SAML adapter used with WildFly.   UPGRADE TO PATTERNFLY 5  In Keycloak 24, the Welcome page is updated to use , the latest version of the design system that underpins the user interface of Keycloak. In this release, the Admin Console and Account Console are also updated to use PatternFly 5. If you want to extend and customize the Admin Console and Account Console, review and update your customizations accordingly.   ARGON2 PASSWORD HASHING  Argon2 is now the default password hashing algorithm used by Keycloak in a non-FIPS environment.  Argon2 was the winner of the and is the recommended hashing algorithm by .  In Keycloak 24 the default hashing iterations for PBKDF2 were increased from 27.5K to 210K, resulting in a more than 10 times increase in the amount of CPU time required to generate a password hash. With Argon2 it is possible to achieve better security, with almost the same CPU time as previous releases of Keycloak. One downside is Argon2 requires more memory, which is a requirement to be resistant against GPU attacks. The defaults for Argon2 in Keycloak requires 7MB per-hashing request. To prevent excessive memory and CPU usage, the parallel computation of hashes by Argon2 is by default limited to the number of cores available to the JVM. To support the memory intensive nature of Argon2, we have updated the default GC from ParallelGC to G1GC for a better heap utilization.   NEW HOSTNAME OPTIONS  In response to the complexity and lack of intuitiveness experienced with previous hostname configuration settings, we are proud to introduce Hostname v2 options.  We have listened to your feedback, tackled the tricky issues, and created a smoother experience for managing hostname configuration. Be aware that even the behavior behind these options has changed and requires your attention - if you are dealing with custom hostname settings.  Hostname v2 options are supported by default, as the old hostname options are deprecated and will be removed in the following releases. You should migrate to them as soon as possible.  New options are activated by default, so Keycloak will not recognize the old ones.  For information on how to migrate, see the .   PERSISTENT USER SESSIONS  Previous versions of Keycloak stored only offline user and offline client sessions in the databases. The new feature persistent-user-session stores online user sessions and online client sessions not only in memory, but also in the database. This will allow a user to stay logged in even if all instances of Keycloak are restarted or upgraded.  The feature is a preview feature and disabled by default. To use it, add the following to your build command:  bin/kc.sh build --features=persistent-user-session ...  For more details see the guide. The contains a new paragraph describing the updated resource requirements when this feature is enabled.  For information on how to upgrade, see the .   COOKIES UPDATES  SAMESITE ATTRIBUTE SET FOR ALL COOKIES  The following cookies did not use to set the SameSite attribute, which in recent browser versions results in them defaulting to SameSite=Lax:   * KC_STATE_CHECKER now sets SameSite=Strict   * KC_RESTART now sets SameSite=None   * KEYCLOAK_LOCALE now sets SameSite=None   * KEYCLOAK_REMEMBER_ME now sets SameSite=None  The default value SameSite=Lax causes issues with POST based bindings, mostly applicable to SAML, but also used in some OpenID Connect / OAuth 2.0 flows.  REMOVING KC_AUTH_STATE COOKIE  The cookie KC_AUTH_STATE is removed and it is no longer set by the Keycloak server as this server no longer needs this cookie.   DEPRECATED COOKIE METHODS REMOVED  The following APIs for setting custom cookies have been removed:   * ServerCookie - replaced by NewCookie.Builder   * LocaleSelectorProvider.KEYCLOAK_LOCALE - replaced by CookieType.LOCALE   * HttpCookie - replaced by NewCookie.Builder   * HttpResponse.setCookieIfAbsent(HttpCookie cookie) - replaced by    HttpResponse.setCookieIfAbsent(NewCookie cookie)   ADDRESSED 'YOU ARE ALREADY LOGGED IN' FOR EXPIRED AUTHENTICATION SESSIONS  The Keycloak 23 release provided improvements for when a user is authenticated in parallel in multiple browser tabs. However, this improvement did not address the case when an authentication session expired. Now for the case when user is already logged-in in one browser tab and an authentication session expired in other browser tabs, Keycloak is able to redirect back to the client application with an OIDC/SAML error, so the client application can immediately retry authentication, which should usually automatically log in the application because of the SSO session. For more details, see .   LIGHTWEIGHT ACCESS TOKEN TO BE EVEN MORE LIGHTWEIGHT  In previous releases, the support for lightweight access token was added. In this release, we managed to remove even more built-in claims from the lightweight access token. The claims are added by protocol mappers. Some of them affect even the regular access tokens or ID tokens as they were not strictly required by the OIDC specification.   * Claims sub and auth_time are added by protocol mappers now, which are    configured by default on the new client scope basic, which is added    automatically to all the clients. The claims are still added to the ID token    and access token as before, but not to lightweight access token.   * Claim nonce is added only to the ID token now. It is not added to a regular    access token or lightweight access token. For backwards compatibility, you    can add this claim to an access token by protocol mapper, which needs to be    explicitly configured.   * Claim session_state is not added to any token now. It is still possible to    add it by protocol mapper if needed. There is still the other dedicated claim    sid supported by the specification, which was available in previous versions    as well and which has exactly the same value.  For more details, see the ..   SUPPORT FOR APPLICATION/JWT MEDIA-TYPE IN TOKEN INTROSPECTION ENDPOINT  You can use the HTTP Header Accept: application/jwt when invoking a token introspection endpoint. When enabled for a particular client, it returns a claim jwt from the token introspection endpoint with the full JWT access token, which can be useful especially for the use-cases when the client calling introspection endpoint used lightweight access token. Thanks to for the contribution.   PASSWORD POLICY FOR CHECK IF PASSWORD CONTAINS USERNAME  Keycloak supports a new password policy that allows you to deny user passwords which contains the user username.   REQUIRED ACTIONS IMPROVEMENTS  In the Admin Console, you can now configure some required actions in the Required actions tab of a particular realm. Currently, the Update password is the only built-in configurable required action. It supports setting Maximum Age of Authentication, which is the maximum time users can update their password by the kc_action parameter (used for instance when updating password in the Account Console) without re-authentication. The sorting of required actions is also improved. When there are multiple required actions during authentication, all actions are sorted together regardless of whether those are actions set during authentication (for instance by the kc_action parameter) or actions added to the user account manually by an administrator. Thanks to and for the contributions.   PASSKEYS IMPROVEMENTS  The support for Passkeys conditional UI was added. When the Passkeys preview feature is enabled, there is a dedicated authenticator available, which means you can select from a list of available passkeys accounts and authenticate a user based on that. Thanks to for the contribution.   DEFAULT CLIENT PROFILE FOR SAML  The default client profile to have secured SAML clients was added. When browsing through client policies of a realm in the Admin Console, you see a new client profile saml-security-profile. When it is used, there are security best practices applied for SAML clients such as signatures are enforced, SAML Redirect binding is disabled, and wildcard redirect URLs are prohibited.   AUTHENTICATOR FOR OVERRIDE EXISTING IDP LINK DURING FIRST-BROKER-LOGIN  There was new authenticator Confirm override existing link added. This authenticator allows to override linked IDP username for the Keycloak user, which was already linked to different IDP identity before. More details in the . Thanks to for the contribution.   OPENID FOR VERIFIABLE CREDENTIAL ISSUANCE - EXPERIMENTAL SUPPORT  There is work in progress on the support of OpenID for Verifiable Credential Issuance (OID4VCI). Right now, this is still work in progress, but things are being gradually added. Keycloak can act as an OID4VC Issuer with support of Pre-Authorized code flow. There is support for verifiable credentials in the JWT-VC, SD-JWT-VC and VCDM formats. Thanks to the members of the OAuth SIG groups for the contributions and feedback and especially thanks to , , and .   SEARCHING BY USER ATTRIBUTE NO LONGER CASE INSENSITIVE  When searching for users by user attribute, Keycloak no longer searches for user attribute names forcing lower case comparisons. The goal of this change was to speed up searches by using Keycloak’s native index on the user attribute table. If your database collation is case-insensitive, your search results will stay the same. If your database collation is case-sensitive, you might see less search results than before.   BREAKING FIX IN AUTHORIZATION CLIENT LIBRARY  For users of the keycloak-authz-client library, calling AuthorizationResource.getPermissions(… ) now correctly returns a List<Permission>.  Previously, it would return a List<Map> at runtime, even though the method declaration advertised List<Permission>.  This fix will break code that relied on casting the List or its contents to List<Map>. If you have used this method in any capacity, you are likely to have done this and be affected.   IDS ARE NO LONGER SET WHEN EXPORTING AUTHORIZATION SETTINGS FOR A CLIENT  When exporting the authorization settings for a client, the IDs for resources, scopes, and policies are no longer set. As a result, you can now import the settings from a client to another client.   MANAGEMENT PORT FOR METRICS AND HEALTH ENDPOINTS  Metrics and health checks endpoints are no longer accessible through the standard Keycloak server port. As these endpoints should be hidden from the outside world, they can be accessed on a separate default management port 9000.  It allows to not expose it to the users as standard Keycloak endpoints in Kubernetes environments. The new management interface provides a new set of options and is fully configurable.  Keycloak Operator assumes the management interface is turned on by default. For more details, see .   SYSLOG FOR REMOTE LOGGING  Keycloak now supports protocol for remote logging. It utilizes the protocol defined in . By default, the syslog handler is disabled, but when enabled, it sends all log events to a remote syslog server.  For more information, see the guide.   CHANGE TO CLASS ENVIRONMENTDEPENDENTPROVIDERFACTORY  The method EnvironmentDependentProviderFactory.isSupported() was deprecated for several releases and has now been removed.  For more details, see the .   ALL CACHE OPTIONS ARE RUNTIME  It is now possible to specify the cache, cache-stack, and cache-config-file options during runtime. This eliminates the need to execute the build phase and rebuild your image due to them.  For more details, see the .   HIGH AVAILABILITY GUIDE ENHANCED  The high availability guide now contains a guide on how to configure an AWS Lambda to prevent an intended automatic failback from the Backup site to the Primary site.   REMOVING DEPRECATED METHODS FROM ACCESSTOKEN, IDTOKEN, AND JSONWEBTOKEN CLASSES  In this release, we are finally removing deprecated methods from the following classes:   * AccessToken   * IDToken   * JsonWebToken  For more details, see the .   METHOD GETEXP ADDED TO SINGLEUSEOBJECTKEYMODEL  As a consequence of the removal of deprecated methods from AccessToken, IDToken, and JsonWebToken, the SingleUseObjectKeyModel also changed to keep consistency with the method names related to expiration values.  For more details, see the .   SUPPORT FOR POSTGRESQL 16  The supported and tested databases now include PostgreSQL 16.   INTRODUCING SUPPORT FOR CUSTOMER IDENTITY AND ACCESS MANAGEMENT (CIAM) AND MULTI-TENANCY  In this release, we are delivering Keycloak Organizations as a technology preview feature.  This feature provides a realm with some core CIAM capabilities, which will serve as the baseline for more capabilities in the future to address Business-to-Business (B2B) and Business-to-Business-to-Customers (B2B2C) use cases.  In terms of functionality, the feature is completed. However, we still have work to do to make it fully supported in the next major release. This remaining work is mainly about preparing the feature for production deployments with a focus on scalability. Also, depending on the feedback we get until the next major release, we might eventually accept additional capabilities and add more value to the feature, without compromising its roadmap.  For more details, see .   UPGRADING  Before upgrading refer to for a complete list of changes.   ALL RESOLVED ISSUES   NEW FEATURES   * Support Credentials Issuance through the OID4VCI Protocol oid4vc  * Issue Verifiable Credentials in the SD-JWT-VC format oid4vc  * Issue Verifiable Credentials in the VCDM format oid4vc  * Extend Account Console to support Credentials Issuance Self-Service    account/ui  * Introduce a new Authenticator to handle duplicate IdP broker links    authentication  * Hardcoded SAML metadata URL in admin-v2 admin/ui  * Reflect new hostname v2 options in Keycloak CR operator  * Add documentation for Hostname v2 docs  * Release notes and Migration guide for Hostname v2 docs  * Create Argon2 password hashing provider  * Make RequiredActions configurable  * Allow onboarding organization members through a registration invitation link  * CLI options to disable encryption and authentication to external Infinispan    dist/quarkus  * Need inline translation assistance for user profile attribute groups.  * Remove Oracle JDBC driver out of the box docs  * Add CRUD for organizations to admin client  * Expose Authorization Server Metadata Endpoint under    /.well-known/oauth-authorization-server to comply with rfc8414 oid4vc  * Expose JWT VC Issuer Metadata /.well-known/jwt-vc-issuer to comply with    SD-JWT VC Specification oid4vc   ENHANCEMENTS   * Declarative User Profile: local-date validation and html5-date clash    user-profile  * Conditionally enable and disable CLI options dist/quarkus  * JsonSerialization does not load all available modules from the classpath  * Add Portuguese translations  * Support management port for health and metrics in Quarkus 3 dist/quarkus  * uma-ticket returns 403 even though user has access, when User Realm Role    isn't present in access Token authorization-services  * Make it clear that `Client Offline Token Max` should not be set when `Offline    Session Max Limited` is disabled for realm admin/ui  * DefaultHttpClientFactory should handle the encoding of the response core  * Protocol mapper and client scope for sub claim  * Upgrade account theme to PatternFly 5 account/ui  * Upgrade admin theme to PatternFly 5 admin/ui  * Allow options to support any value in addition to a list of pre-defined    values. dist/quarkus  * Make sure admin events are not referencing sensitive data from their    representation admin/api  * Allow to provider password to kcadm (keycloak-admin-cli) via environment    variable admin/cli  * Query users by 'LDAP_ID' is not working ldap  * Enable theme caches by default in start-dev dist/quarkus  * Refine how ConfigSource names are being used dist/quarkus  * Passkeys: Supporting WebAuthn Conditional UI authentication/webauthn  * Look if checks in IntrospectionEndpoint can be simplified oidc  * Inconsistent behaviour on getting user permissions using authorization    authorization-services  * User Profile \"Input placeholder\" and other annotations - Use Localization    keys user-profile  * Optimize query batching and result fetching by tuning Hibernate parameters  * Show an error message when file does not exist for the `config-file`    parameter dist/quarkus  * Localization Proposal 2 admin/ui  * Initial client policies integration for SAML saml  * Map Storage Removal: Remove deprecated model/legacy module storage  * Keycloak and MSAD: enabling account in MSAD does not propagate to Keycloak    ldap  * Refactoring JavaScript code of WebAuthn's authenticators to follow the    current Keycloak's JavaScript coding convention authentication/webauthn  * Trivy Analysis warnings should be fixed  * Clarify format of keys in `additionalOptions` field in the Keycloak CR docs  * Use browser router for Account Console account/ui  * Edit High Availability guide  * Edit 23.0 changes part of Upgrading Guide  * Use JDK17 functionality in the KC Operator operator  * Use new remote-store options in HA guides  * Upgrade to Aurora Postgres 15.5  * `ClusterProvider` should no longer be deprecated now that \"legacy\" is the    default  * CS and SK localized messages need an update  * Expose quarkus syslog logging now GELF is being deprecated from Keycloak    dist/quarkus  * Simplify handling of profile features in test cases  * Make general `cache` options runtime dist/quarkus  * Support for script providers when running in embedded mode testsuite  * Remove offline session preloading  * Remove additional handlers for health and metrics endpoints dist/quarkus  * Integrate downstream Upgrading Guide changes into upstream  * Upgrade to Quarkus 3.8.2 dist/quarkus  * Enable Infinispan metrics by default  * Missing API documentation for /admin/realms/{realm}/groups/{group-id}  * Upgrade to Infinispan 14.0.26 core  * Enable http metrics once Quarkus 3.8.3 is available  * Address feedback to Keycloak Server guide docs  * Persist online sessions to the database  * Make the Language Selector sorted and searchable  * Address edits to the Operator Guide  * Upgrade Infinispan to 14.0.27.Final  * update for messages_de.properties required translations  * Upgrade to Quarkus 3.8.3 dist/quarkus  * Default password hashing algorithm should be set to default password hash    provider  * Update HA Guide now that non-XA mode is the default  * Align help output for Quarkus distribution across Windows and Linux    dist/quarkus  * Use Argon2 password hashing by default  * Provide histograms for http server metrics  * Prevent duplicate form submission in Create realm dialog in admin ui admin/ui  * Use the same new code for persistent sessions for offline sessions core  * Provide a dedicated way of updating Quarkus classloading indices  * Handle concurrent writes to sessions more gracefullly  * Add details to error messages, especially around refresh tokens  * When LDAP groups synchronization fails, show root cause in admin UI admin/api  * Avoid deprecated `jboss-modules` method usage  * More conventional looking conditional element in authentication diagram    admin/ui  * Polishing docs for lightweight tokens oidc  * The concurrency of hashing leads to increased memory usage and CPU throttling  * Batch updates to the database to avoid using too many IOPS  * Java 21 support  * Change user_id value for REFRESH_TOKEN and REFRESH_TOKEN_ERROR events oidc  * Add ui-tab context information into the onCreate  * Improve german translations for admin ui  * Refine the warning produced when a non-cli build-time property is used at    runtime dist/quarkus  * For client-credential-grants, there shouldn't be an interaction with the    authentication cache  * Emphasize the need for setting container limit docs  * Add missing german translations for user federation in admin UI  * Automatically fill username when authenticating to through a broker  * Improve the performance of the PermissionTicketStore.findGrantedResources    method authorization-services  * Improve persistent sessions DB throughput for logins/logouts by batching  * Indicate whether a user is transient or not in user sessions list  * Upgrade to Quarkus 3.8.4 dist/quarkus  * ID fields in SessionWrapper should be immutable  * Store extended error message in events for client credential grants  * Ensure GroupResource.getSubGroups doesn't rely on no-arg version of    GroupModel.getSubGroupsStream to avoid prematurely loading all subgroups    storage  * OIDC: Backchannel logout token should use \"typ\":\"logout+jwt\" oidc  * Replace tooltip for adding a translation to an attribute with a text    underneath `Display name`  * Support adding existing users to an organization  * Infinispan 15.0.3.Final  * Use cache.compute() method to improve the replace retry loop  * Conditionally run Quarkus IT in GHA based on code changes testsuite  * Use Java locale translations instead of manually edited translations    translations  * Improve details for user error events in OIDC protocol endpoints oidc  * Minor corrections to High Availability Guide docs  * Revisit SessionsResource#realmSessions as it current loads all sessions into    memory  * Complete transistion away from Resteasy core  * Update Create Realm in Keycloak 24 Getting Started  * Don't sort persistent sessions when retrieving a list  * Set default role mapping filter in the role mapping modal  * Allow migration of non-persistent sessions to persistent sessions  * Avoid conflicts when writing make store keys  * Make sure organization groups can not be managed but when managing an    organization  * Email validation for managed members should only fail if it does not match    the domain set to a broker  * Describe how to enable and disable persistent sessions for an installation    docs  * Revisit rolling configuration upgrades for persistent-sessions feature  * Enhance documentation for REST API for X.509 Direct Grant Flow usage    authentication  * VC issuance in Authz Code flow without considering “scope” parameter  * Infinispan 15.0.4.Final  * Require external Infinispan be of version 15 or greater  * Upgrade Selenium and Arquillian dependencies in testsuite testsuite  * Unify approach for WebAuthn tests testsuite  * Document Failover Lambda for Active/Passive deployments  * Show a message when confirming an invitation link  * Snyk report to identify branches impacted by a CVE ci  * Avoid explicit flush when handling persistent sessions  * Improve documentation for the case when 'basic' client scope already exists    storage  * Upgrade old Keycloak version for DB migration tests testsuite  * Avoid IntelliJ to automatically create start imports  * Improve Client Type Integration Tests oidc  * Conditionally execute WebAuthn tests when Account console UI is changed    testsuite  * Add periodic synchronisation for Weblate contents  * Release notes for support application/jwt response in token introspection    endpoint docs  * Upgrade to Quarkus 3.8.5 dist/quarkus  * Adding ability to get realm attributes in themes   BUGS   * Information not displayed when a logged in user reset his password    authentication  * Add `id_token_signed_response_alg` when realm default algorithm is not    `RS256` oidc  * Security bug: Timing Oracle @ Authorization Grant Request , CWE 208    authentication  * AccessTokens generated from RefreshTokens without scope oidc  * False implementation of SAML element EncryptionMethod saml  * Slow user query by attribute storage  * Duplicated user consents storage  * DefaultBruteForceProtector leverages a single thread to write success/failed    events authentication  * Refresh token rotation with multiple tabs oidc  * \"1403 Killed\" after starting a fresh build docs  * Getting failed to initialize js message if consent is rejected by user    account/ui  * No email send on TOTP/Authenticator app removal core  * RS256 signed token validation fails oidc  * Unable to delete realm names with invalid URL characters admin/api  * AuthzClient getPermissions() deserializes to List and not List    authorization-services  * Required actions execution order (session and user required actions)    authentication  * search users by custom attributes admin/client-js  * User locale in server info has language and country switched around admin/api  * MultiVersionClusterTest not working for Quarkus based distribution storage  * Stop using nested components admin/ui  * Refresh token have a negative exp claim because TokenManager is vulnerable to    integer overflow for long lasting sessions (YEAR 2038 bug) oidc  * CRL Verification failing due to client certificate not being in a chain    authentication  * Entering a single space in a regex password policy makes admin interface    unusable. core  * SAML IDP initiated SSO getting cookie_not_found error saml  * Reset password flow fails with \"Page has expired\" error when Kerberos    authentication is enabled in the browser flow authentication  * Keycloak admin cli creating/updating authention executions not respecting the    priority value specified admin/api  * Flaky test: org.keycloak.testsuite.forms.ResetPasswordTest#resetPasswordLink    ci  * kc export fails when using User Federation (LDAP) with file-based Vault    enabled import-export  * Flaky test:    org.keycloak.testsuite.forms.BrowserFlowTest#testAlternativeNonInteractiveExecutorInSubflow    core  * Invalid redirect after logging in using Twitter (X) testsuite  * NullPointerException in SAML IdP Logout request with SessionIndex and without    NameID identity-brokering  * Attribute search does not work with federated users with ldap. admin/ui  * New admin console doesn't support automatic logout account/ui  * Account console v2 doesn't support automatic logout account/ui  * Duplicate path in groups claim oidc  * Keycloak Operator fails to install realm authentication flow because \"flow is    null\" import-export  * Cannot disable LDAP-backed user if importEnabled=false ldap  * Container labels inherited from UBI image dist/quarkus  * Remove non-unique `id` attributes from `webauthn-authenticate.ftl` login/ui  * iframe for frontend logout gets blocked if a custom CSP header is used core  * Parallel builds stopped working admin/ui  * Not proper remove for nested sub-flows from DB core  * NoClassDefFoundError for Apache XML and EAP8 adapter/jee-saml  * Negative token expiration when changing client session max lifetime oidc  * ServerRequestFilter / ServerResponseFilter not being picked up extensions  * Restrict the access to 'whoami' endpoint for tokens issued for the admin    console client admin/api  * Partial export/import is not mentioned in Keycloak's Server Administration    Guide docs  * Errors in Outgoing HTTP requests documentation docs  * A java.lang.NullPointerException occurs when sending a Multipart/form-data    request to any file upload interface. admin/api  * Incorrect JSON format returned in case of existing user (with user    federation) admin/api  * Space in realm name breaks initial console uris admin/api  * Loosing refresh token with Google Identity Provider identity-brokering  * Failing to import client's authorisation settings through UI    authorization-services  * PostgreSQL deadlock causes 400 client error instead of 500 server error    storage  * Identity provider sync mode: incorrect selection in case of null admin/ui  * Device verification flow does not require consent under certain circumstances    oidc  * Realm improper input sanitization core  * Improper Input Validation and Sanitization Leads to persistent partial Denial    of Service admin/api  * Revoked Token may be valid for a short time after expiring oidc  * Duplicate emails is On when Email as username and Login with email are On    admin/ui  * How do you update a custom user storage provider jar that includes a version    number? dist/quarkus  * Keycloak cannot run on windows machine in dev-mode. Because non-English    systems cannot support keycloak's package's. dist/quarkus  * Incorrect position of nonce in OCSP request authentication  * \"Test connection\" on LDAPS URI does not test TLS handshake admin/api  * Wrong rendering duplicated options in guides docs  * `LogoutEvent` is not fired on required UpdatePassword action core  * Can't access hidden tabs on the left in admin UI admin/ui  * Login via brokerage to identity provider fails with clients having UUID with    uppercase letter identity-brokering  * Access tokens includes nonce claim oidc  * Deleting sub-realm roles throw errors (even tho it succeeded)    authorization-services  * Workflow failure Quarkus IT -    StartCommandDistTest#testWarningWhenOverridingBuildOptionsDuringStart ci  * Workflow failure: Fuse adapter tests ci  * Workflow failure: Operator CI - KeycloakTruststoresTests#testTrustroreExists    ci  * Grant type \"urn:ietf:params:oauth:grant-type:uma-ticket\" openid-connect/token    service endpoint is returning refresh token with invalid Expiration    authorization-services  * Editing built-in client policy profiles are silently reverted oidc  * Missing `exp` claim from Offline tokens when `Offline Session Max Limited` is    disabled core  * Lowercased \"terms_and_conditions\" is not migrated in fed_user_required_action    table core  * Account console does not correctly treat link / unlink account account/ui  * mvnw clean install -Pdistribution on Windows deletes necessary files during    clean of org.keycloak:keycloak-admin-ui admin/ui  * Invalidating offline token is not working from client sessions tab    authentication  * Warnings in log during normal startup dist/quarkus  * Google Authenticator now supports SHA256 and SHA512 authentication  * Social login - test failures with unexpected status code testsuite  * Log warning when not using scope `openid` oidc  * Missing feature ID for tech preview feature in docs docs  * type of clients.findRole() in @keycloak/keycloak-admin-client is wrong    admin/client-js  * Authz-client AuthorizationResource.getPermissions() ClassCastException    authorization-services  * LdapSyncTest failures running with external Active Directory testsuite  * Cpu and memory sizing typo docs  * Readable realm name no longer visible in logs, but realm id is used instead    core  * Getting subgroups does pagination before filtering core  * Uncaught server error: java.lang.IllegalArgumentException: Path parameter not    provided oidc  * LegacyUserCredentialManager class not found storage  * User tab \"Identity Provider Links\" is not available when only \"view-users\" or    \"manage-users\" realm-management role is assigned as in the v1 Keycloak theme    account/ui  * URL change for liquibase docs docs  * Custom Browser Flow not working anymore admin/ui  * Client registration policy \"Allowed Protocol Mapper Types\" prevents clients    from self-updating via the client registration api admin/api  * Admin Console tests are failing due to changes in supported authenticators    testsuite  * Release notes from 24.0.0 miss that multi-site active-passive deployments are    supported docs  * dropping KC_PROXY=edge causes startup error core  * Account console dev environment broken account/ui  * Mixed use of javax and jakarta in org.keycloak.admin.client adapter/jee  * Cannot modify realm email settings since keycloak 24 user-profile  * Incomplete documentation when an email about changed credentials is sent docs  * In the account console, the link \"Back to security-admin-console\" disappears    after the first navigation account/ui  * Only allow a known refferer URI for the Account Console account/ui  * Password policy for not having username in the password authentication  * Account Console REST API for /linked-accounts Returns Multiple    Access-Control-Allow-Origin Headers account/api  * Admin tests: Flaky realm_settings_user_profile_enabled test admin/ui  * Quarkus-next build failure: Could not find artifact    io.quarkus:quarkus-extension-maven-plugin ci  * Unable to set a newly created flow in First Login Flow override for a SAML    identity provider admin/ui  * MTLS Cache options should be runtime options, not build time options    dist/quarkus  * Account console does not work with `--http-relative-path` account/ui  * Wrong Welcome page image in the documentation docs  * Registration template in login2 is broken login/ui  * SMTP email sending fails because of tls certificate verification even with    tls-hostname-verifier=ANY core  * Snyk workflow failure ci  * Broken Migration \"MigrateTo24_0_0\" core  * Fixing downstream documentation build docs  * User profile fields cannot be set empty once they have a non-empty value (in    Login Theme) user-profile  * Performance problem with Amazon JDBC wrapper version 2.3.4  * Account console confusing with WebAuthn account/ui  * Can't register webauthn passwordless key when RS1 signature algorithm is    configured in policies authentication/webauthn  * Translation values not loaded for User Profile attributes admin/ui  * User Profile translations - value put in wrong field after search    user-profile  * Incorrect Length Validation for Attribute admin/cli  * Race condition loading serverinfo in admin console admin/ui  * ES translation causes FreeMarker rendering issues translations  * Authenticator Example module compilation failure authentication  * VerifyUserProfile invalidates user cache on every login core  * Required action selection is broken admin/ui  * Documentation is referring to deprecated/unmaintained examples docs  * SAMLIdentityProvider not honoring SamlAuthenticationPreprocessor saml  * Get Groups in admin/cli returns all groups and not the groups that meets the    condition specified in -q option admin/cli  * Error when executing refresh grant, with scope param, without offline_access    scope specified oidc  * Incorrect version of bctls-fips in the docs docs  * Webauthn token stops working on migration to 24 authentication/webauthn  * Truststore handling for the Operator is not documented operator  * Multi datasource configuration does not work in Keycloak 24.0.1 dist/quarkus  * Performance impact in changed hashing measured wrong authentication  * User search field loses focus after first input in realms with user    federation admin/ui  * Keycloak docs state that there are http metrics, but they are disabled docs  * Entry 999.0.0 in MIGRATION_MODEL prevents future migrations of the database    core  * Admin tests: Failing realm_settings_events_test test admin/ui  * Hibernate Dialect detection does not work anymore for Oracle DBs storage  * message of groups is wrong in messages_ja.properties admin/ui  * Groups help message is only \"Groups\" admin/ui  * 🍺 instead of dot: Attributes in account UI are not loaded user-profile  * ORA-01450 when updating keycloak 23 -> 24 storage  * User Profile: Inconsistent ordering of attributes between account and login    themes user-profile  * Username LDAP attribute other than uid is difficult ldap  * MySQL connector artifact should be ignored dist/quarkus  * JWK key ignored due to missing required field 'use' despite matching KID oidc  * Keycloak CR Truststore should not have a name operator  * User Profile attribute translation saves wrong key to realm overrides    admin/ui  * Token setting missing admin/ui  * Group search does not work in user view admin/ui  * Paging issue in groups via user view admin/ui  * kc.sh may leak credentials core  * Failed authentication: java.lang.NullPointerException: Cannot invoke    \"org.keycloak.models.UserModel.getFederationLink()\" because \"this.delegate\"    is null identity-brokering  * Deleting translations after attribute deletion admin/ui  * WebAuthN registration broken after upgrading to 24.0.1    authentication/webauthn  * Navigation broken on local development account/ui  * HA guide erroneously refers to AWS Global Accelerator docs  * Admin UI drag & drop in flow config seems to delete actions admin/ui  * Locale label missing on login page for Brazilian Portuguese, Greek and    Persian translations  * JAVA_OPTS are not set under Windows dist/quarkus  * Inconsistent handling of product vs. community in HA guide table-of-contents    docs  * Admin API: User PUT operation clears firstname, lastname email fields    admin/api  * username contains invalid characters user-profile  * Update user makes User ID changes when federationLink and LDAP_ID is not set    properly admin/api  * scroll bar is missing inn clients view keycloak admin GUI core  * WARN - Event object wasn't available in remote cache after event was received    infinispan  * org.keycloak.documentation.test.ExternalLinksTest fails with incorrect status    code reported back in the results docs  * The false option of the pkceMethod init parameter for the JavaScript adapter    is ignored adapter/javascript  * ConditionalLoaAuthenticator documentation incorrect re: unauthenticated    users. authentication  * PodTemplateTest assertions are ignored testsuite  * Syntax highlighting for log example is wrong in downsream dist/quarkus  * Broken lists in import/export server guide docs  * Password denylist Doesn't Work As Expected authentication  * New username-password policy check is reversed user-profile  * Unclosed span bracket in register.ftl login/ui  * Keycloak is not returning proper error message for PUT /users admin API    user-profile  * Dedicated client scopes always show up when searching admin/ui  * Declarative User Profile: The use of the \"select-radiobuttons\" with options    validation display is broken user-profile  * Error in refresh flow with scope parameter oidc  * Review cookie attributes and set SameSite for all cookies  * Authentication flow diagram incorrect branching in some flows admin/ui  * inputOptionLabels is truncating text that is not wrapped for localization    account/ui  * Help text wrong in key provider admin/ui  * Missing help text for Brute Force Mode admin/ui  * IdP Linking: Usernames sometimes lowercase and sometimes uppercase    identity-brokering  * Workflow failure: ManagementDistTest ci  * Message for searchClientRegistration is missing admin/ui  * Cards in IDP and User federation are not shown to be clicable admin/ui  * [LDAPStorageProvider] NPE if user is cached but has been deleted in ldap ldap  * notBefore and setToNow untranslated admin/ui  * LDAP provider add has 3 lines on top of screen admin/ui  * Collision with base testsuite dependency  * UserStorageSyncManager int overflow storage  * Flaky test:    org.keycloak.testsuite.admin.IdentityProviderTest#testSamlImportWithAnyEncryptionMethod    ci  * Flaky test:    org.keycloak.testsuite.admin.IdentityProviderTest#testSamlImportWithAnyEncryptionMethod    ci  * Flaky test:    org.keycloak.testsuite.admin.IdentityProviderTest#testSamlImportWithAnyEncryptionMethod    ci  * Brute force detection fails with read-only LDAP users authentication  * OrganizationTest.testAttributes fails in GHA CI testsuite  * Incorrect user info in the head when using lightweight access token for    account-console account/ui  * Invalide objects comparison in Java core  * Missing permission to read configmaps in `keycloak-operator-role` operator  * Unable to see user's inherited role if user has no directly assigned roles    admin/ui  * docker-v2 authentication fails with KC-SERVICES0097: Invalid request:    java.lang.NullPointerException: Cannot invoke    \"org.keycloak.models.ClientModel.getClientScopes(boolean)\" because    \"this.client\" is null core  * Accessing a transient (lightweight) user through client session fails in    admin-api/-ui admin/ui  * \"Extend to children\" button in authorization group policies is wrongly    disabled admin/ui  * Unable to fetch realm names when contains special characters admin/ui  * Remove invalid \"this.\" from keycloak-admin-client README admin/client-js  * Keycloak 24.0.2 - Enlisted connection used without active transaction storage  * Invalid label `validatingX509Certs` in new SAML identity provider screen    admin/ui  * Translations missing for recovery codes in KC 24 account/ui  * ID is shown prematurely on Identity Provider Mapper after Save admin/ui  * Webauthn Policy timeout accepts values > 8 hours admin/ui  * `passwordPoliciesHelp.notContainsUsername` missing in admin console admin/ui  * NPE when listing sessions in UI if associated user is gone core  * Child groups filtering returns all groups admin/ui  * Failure reset time is applied to Permanent Lockout authentication  * Inconsistent Group Ordering in Keycloak API Responses For Client Policies    Causing Drift Detection Challenges admin/fine-grained-permissions  * Keycloak Operator 24.x - the keycloak custom image tag is being overwritten    with nightly pull operator  * socketTimeoutUnits and establishConnectionTimeoutUnits in HttpClientBuilder    are not used core  * Master realm can be deleted admin/api  * clients_saml_test.spec.ts fails in main admin/ui  * Possible NPE when exporting user policy authorization-services  * IndexWrapper warnings when starting Keycloak dist/quarkus  * Auto-build shouldn't warn about unavailable runtime options dist/quarkus  * Conditional cache options are not evaluated correctly dist/quarkus  * Compilation error in latest main (conflicting PRs for oid4vc and changes for    EnvironmentDependentFactory) core  * Grant urn:ietf:params:oauth:grant-type:pre-authorized_code enabled even if    oid4vc_vci feature is disabled oid4vc  * MULTIVALUED_STRING_TYPE does not show in UI if empty admin/ui  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testGetCredentialOfferUriUnsupportedCredential    ci  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testGetCredentialOfferUriInvalidToken    ci  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testRequestCredential    ci  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testGetCredentialOfferUriUnauthorized    ci  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testGetCredentialOfferUnauthorized    ci  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testRequestCredentialInvalidToken    ci  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testRequestCredentialUnauthorized    ci  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testCredentialIssuance    ci  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testGetCredentialOfferWithoutNonce    ci  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testGetCredentialOffer    ci  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testGetCredentialOfferWithABrokenNote    ci  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testGetCredentialOfferURI    ci  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testGetCredentialOfferWithoutAPreparedOffer    ci  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testRequestCredentialUnsupportedFormat    ci  * Flaky test:    org.keycloak.testsuite.oid4vc.issuance.signing.OID4VCIssuerEndpointTest#testRequestCredentialUnsupportedCredential    ci  * Creating client-scope without protocol causes GUI bug admin/api  * Argon2 password hashing leads to increased Major GC's in Keycloak's JVM    during load tests authentication  * Admin console message bundle contains duplicate keys admin/ui  * Preflight request with OPTIONS method for token introspection endpoint not    working. authentication  * not able to disable declarative_ui feature  * Startup probe should check for existence of an Admin user before returning    200 dist/quarkus  * JGroups creates log messages as it switched internally to \"trace\"    dist/quarkus  * Documentation cites wrong endpoint for Docker Registry v2 Authentication docs  * DuplicateEmailValidator causes two DB queries on every login if a user has an    email address core  * Fix waiting for change to take effect in SessionTimeoutsTest  * LDAP - GroupToGroup Mapper throws \"ENTRY_EXISTS\" Error ldap  * local user login not possible after LDAP connection problem ldap  * Update docs to distinguish between product names and CR names docs  * JS Admin Client does not support q query parameter on users.count() and    clients.find() methods admin/client-js  * LDAP user creation reports error but user is created ldap  * Bad formatting of permissions error in admin console admin/ui  * Broken link in documentation docs  * Tests for persistent sessions are not performed infinispan  * The select for a locale behaves as a multi-select in the admin and account UI    when it should be single value admin/ui  * Flaky test:    org.keycloak.testsuite.client.ClientTypesTest#testUpdateClientWithClientType    ci  * Flaky test:    org.keycloak.testsuite.oauth.ClientTokenExchangeTest#testExchangeWithDynamicScopesEnabled    ci  * Flaky test:    org.keycloak.testsuite.oauth.ClientTokenExchangeTest#testClientExchange ci  * Flaky test:    org.keycloak.testsuite.oauth.ClientTokenExchangeTest#testIntrospectTokenAfterImpersonation    ci  * Flaky test:    org.keycloak.testsuite.oauth.ClientTokenExchangeTest#testPublicClientNotAllowed    ci  * Flaky test:    org.keycloak.testsuite.oauth.ClientTokenExchangeTest#testExchangeUsingServiceAccount    ci  * Flaky test:    org.keycloak.testsuite.oauth.ClientTokenExchangeTest#testImpersonation ci  * Flaky test:    org.keycloak.testsuite.oauth.ClientTokenExchangeTest#testImpersonationUsingPublicClient    ci  * `auth-server-feature` does not work for `auth-server-quarkus-embedded`    testsuite  * Default value for MULTIVALUED_STRING_TYPE in authenticator config is ignored    admin/ui  * Documentation Enhancements Admin Rest API Group to Client Role Mappings docs  * Upgraded docker to 24, now unable to browse \"authentication\" page in one of    my realms. authentication  * Listing of sessions is very slow when we have tens of thousands sessions (+    not able to know the exact number of sessions) admin/ui  * JWSBuilder when used directly with AsymmetricSignatureSignerContext produces    non compliant ECDSA signed JWT core  * POST /{realm}/clients-initial-access is allowing invalid data like count = -1    and expiration date-time can be set earlier than the creation date-time oidc  * Clicking the \"save\" button multiple times in the Saml IDP configuration page    corrupts the value of \"AuthnContext ClassRefs\" admin/ui  * Unlocking and saving the user's temporary lock will render the user disabled.    account/ui  * Fix user-facing typos in error messages core  * Custom user attributes are not shown for service account users in the Admin    UI admin/ui  * kc export fails when using User Federation (LDAP) with SSL/TLS import-export  * Restart authentication event type is not generated authentication  * Need to show translation for attributes group on Registration form admin/ui  * Potential bug introduced to JavaKeystoreKeyProvider in #26936 admin/api  * NPE when Organization feature enabled core  * clients_tests is unstable admin/ui  * Empty CSP header value breaks security filter authentication  * Cypress tests store videos even for passing tests ci  * Fixing realm removal when removing groups and brokers associated with an    organization core  * realm_settings_user_profile_enabled fails randomly admin/ui  * Maven clean build doesn't clean admin client generated files ci  * Failure: SessionTimeoutsTest ci  * OAuth 2.0 Device Polling Interval - Setting in Realms settings/Token    Plus-Minus to change value not working admin/ui  * Cypress failing on video recording ci  * Increased augmentation time after Quarkus 3.8.4 upgrade dist/quarkus  * Remote caches and other site's caches might get out-of-sync when persistent    sessions are used core  * Org domain removal from IDP is not properly propagated to the DB core  * SNYK-JAVA-ORGBOUNCYCASTLE-6277381 - Observable Timing Discrepancy in    org.bouncycastle:bcprov-jdk18on dependencies  * CVE-2024-30172 - Infinite loop in org.bouncycastle:bcprov-jdk18on    dependencies  * CVE-2024-30171 - Observable Discrepancy in org.bouncycastle:bcprov-jdk18on    dependencies  * CVE-2024-29857 - Allocation of Resources Without Limits or Throttling in    org.bouncycastle:bcprov-jdk18on dependencies  * Wrong Media Type / Format of SD JWT VC oid4vc  * Database driver install examples can lead to permission errors in some    circumstances docs  * Unable to import realms with organization feature enabled core  * Admin console development fail due to whoami endpoint admin/ui  * Admin Console uses a wrong URL type for auth server admin/ui  * Unmanaged Attributes drop down doesn't reflect the value admin/ui  * client_authorization_test fails admin/ui  * Snyk Report is not preventing duplicates ci  * Broken translations for loa-condition-level and loa-max-age admin/ui  * MigrateTo25_0_0 does not complete within default transaction timeout storage  * OpenAPI: Missing content definition for authentication flow executions GET    API admin/api  * Flaky test:    org.keycloak.testsuite.model.session.UserSessionPersisterProviderTest#testMigrateSession    ci  * Supported Credential Type is not evaluated when applying the Protocol Mapper    in OID4VCI oid4vc  * LDAP User federation: LDAP: error code 49 - Invalid Credentials ldap  * package com.google.common.hash does not exist when building    keycloak-api-docs-dist docs  * Aggregated javadoc generation fix + missing keycloak-operator javadoc    dist/quarkus  * Missing Text for x509 translations  * Kubernetes resources point to non-existing Operator image operator  * Upgrade supported PostgreSQL to version 16 ci  * Unable to create an LD-Credentials/VCDM provider for OID4VC oid4vc  * Cannot access the account console account/ui  * Increased GC overhead in the continuous performance tests after G1GC compiler    change dist/quarkus  * Reason not logged in event for invalid SAML request saml  * x509 SAN UPN other name is not handled in JDK 21 authentication  * CI for JS not running all the tasks ci  * Enabling and disabling functions are not working properly in KC GUI admin/ui  * Revert editorconfig for properties files as trailing blanks are used ci  * Nightly build for API docs is broken  * SessionTimeoutsTest failing even after retry, probably due to insufficient    cleanup testsuite  * Using {application.session.host} in backchannel logout url prevents from    saving client admin/api  * Sign out button in the account console has wrong Selenium locator testsuite  * Typo in the upgrading guide for persistent sessions docs  * All roles are populated as inherited roles if a single role is added to a    dedicated client scope admin/ui  * Update RFC reference in subject: Likely typo RFC2553 -> RFC2253, Consider    RFC4514 admin/ui  * The OID4VC tests break automation account/ui  * Remove sources folder before invoking JakartaTransformer  * Updating client policies in JSON editor is buggy. Attempt to update global    client policies should throw the error admin/ui  * Option `cache-remote-tls-enabled` is missing the default dist/quarkus  * Client scope names not shown in evaluate section in client-scopes tab    admin/ui  * Malformed dependency version causing the build failure testsuite  * Test PoC does not run with Quarkus fork join worker  * Keycloak CI - failure in Store IT (aurora-postgres) ci  * Use forkjoin pool factory in testsuite for embedded Quarkus Auth Server    testsuite  * Locale dropdowns not working account/ui  * Base theme contains properties without default values login/ui"
}