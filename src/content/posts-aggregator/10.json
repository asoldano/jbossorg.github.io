{
  "title": "Quarkus 3.2.10.Final released - Maintenance LTS release",
  "link": "https://quarkus.io/blog/quarkus-3-2-10-final-released/",
  "author": [
    {
      "name": "Alexey Loubyansky",
      "avatar": null
    }
  ],
  "date": "2024-01-26T00:00:00.000Z",
  "feed_title": "Quarkus",
  "content": "Quarkus 3.2.10.Final, the tenth maintenance release of the 3.2 LTS release train has been released.  This release includes the following security-related fixes:   * Authorization flaw in Quarkus RestEasy Reactive and Classic when    \"quarkus.security.jaxrs.deny-unannotated-endpoints\" or    \"quarkus.security.jaxrs.default-roles-allowed\" properties are used   * JSON payload getting processed prior to security checks when REST resources    are used with annotations   * org.eclipse.parsson/parsson: Denial of Service due to large number parsing   * apache-sshd: ssh: Prefix truncation attack on Binary Packet Protocol   * mysql-connector-java: Connector/J unspecified vulnerability   * Source references exposed in RESTEasy error response  And the following component upgrades:   * Apache commons-compress 1.24.0 → 1.25.0   * Apache SSHD 2.10.0 → 2.12.0   * Eclipse Parsson 1.1.2 → 1.1.6   * Hibernate ORM 6.2.13.Final → 6.2.18.Final   * Hibernate Reactive 2.0.6.Final → 2.0.8.Final   * Jandex 3.1.2 → 3.1.6   * MySQL JDBC driver version 8.0.30 → 8.2.0   * RESTEasy 6.2.4.Final → 6.2.7.Final   * SmallRye Reactive Messaging 4.6.0 → 4.6.1  If you are not already using a 3.2 release, please refer to .   KNOWN ISSUES INCLUDE:  It should be a safe upgrade for anyone already using a 3.2 release. However, some users may potentially run into the following couple of issues.   USING CDI INTERCEPTORS TO RESOLVE MULTITENANT OIDC CONFIGURATION FAILS DUE TO SECURITY FIX IN 3.2.10.FINAL  The security fix implemented in Red Hat build of Quarkus version 3.2.10.Final to address introduced a breaking change.  This breaking change is relevant only when using multiple OIDC providers with RestEasy Classic and occurs if you use Context and Dependency Injection (CDI) interceptors to programmatically resolve OIDC tenant configuration identifiers.  Before this fix, CDI interceptors ran before authentication checks. After introducing the fix, authentication occurs before CDI interceptors are triggered. Therefore, using CDI interceptors to resolve multiple OIDC provider configuration identifiers no longer works. RestEasy Reactive applications are not affected.  Workaround: Use the quarkus.oidc.TenantResolver method to resolve the current OIDC configuration tenant ID.  For more information, see the section of the Quarkus “Using OpenID Connect (OIDC) multitenancy” guide.   CHANGE OF THE MYSQL JDBC DRIVER MAVEN ARTIFACT GROUPID AND ARTIFACTID  As a consequence of fixing , the groupId and artifactId of the MySQL JDBC driver in the quarkus-bom has changed from        <dependency>         <groupId>mysql</groupId>         <artifactId>mysql-connector-java</artifactId>         <version>8.0.30</version>       </dependency>  to        <dependency>         <groupId>com.mysql</groupId>         <artifactId>mysql-connector-j</artifactId>         <version>8.2.0</version>       </dependency>  Projects consuming it as a dependency of io.quarkus:quarkus-jdbc-mysql will not be affected by this change. However, projects that had a direct dependency on mysql:mysql-connector-java relying on quarkus-bom to manage its version will have to update the groupId and artifactId to the new ones mentioned above.   FULL CHANGELOG  You can get .   COME JOIN US  We value your feedback a lot so please report bugs, ask for improvements… Let’s build something great together!  If you are a Quarkus user or just curious, don’t be shy and join our welcoming community:   * provide feedback on ;   * craft some code and ;   * discuss with us on and on the ;   * ask your questions on ."
}