{
  "title": "Portfolio Architecture Examples - Finance Collection",
  "link": "http://www.schabell.org/2022/04/portfolio-architecture-examples-finance-collection.html",
  "author": [
    {
      "name": "Eric D. Schabell",
      "avatar": null
    }
  ],
  "date": "2022-04-18T05:00:00.059Z",
  "feed_title": "Eric D. Schabell",
  "feed_avatar": "https://www.gravatar.com/avatar/c4b562a3796ce4736927992c6daa4567?s=50",
  "content": "Figure 1: The portfolio architecture process  For a few years now we've been working on a project we have named . These are based on selecting a specific use case we are seeing used in the real world by customers and then finding implementations of that case using three or more products from the Red Hat portfolio.    This basic premise is used as the foundation, but many aspects of open source are included in both the process and the final product we have defined. There is a community, where we share the initial project kickoff with a group of architects and use their initial feedback from the start. We also present the architecture product we've created right at the end before we publish to ensure usability by architects in the field. The final publish product includes some internal only content around the customer projects researched, but most of the content is  through various open source channels.   This article is sharing an overview of the product we've developed, what's available to you , and concludes by sharing a collection of architectures we've published.   INTRODUCTION  The basis of a portfolio architecture is a use case, two to three actual implementations that can be researched, and includes the use of a minimum of three products. This is the ideal foundation for a project to start, but we encountered a problem with use cases containing emerging technologies or emerging domains in the market. To account for these we've chosen to note the fact that these are opinionated architectures based on internal reference architectures.   The product has been defined as complete for publishing when it contains the following content:     * Short use case definition  * Diagrams - logical, schematic (physical), and detail diagrams  * Public slide deck containing the use case story and architecture diagrams  * Internal slide deck containing both the pubic deck content and the    confidential customer research  * Video (short) explanation of the architecture  * Either a technical brief document or one or more articles covering the    solution architecture  Note that the items in italics are all available to anyone  in the Red Hat Portfolio Architecture Center or in the Portfolio Architecture Examples repository.    FIGURE 2: LOGICAL DIAGRAM DESIGN TEMPLATE  TOOLING AND WORKSHOPS  The progress towards our products required a good idea of how we wanted to diagram our architectures. We chose to keep them very generic and simple in style to facilitate all levels of conversation around a particular use case without getting bogged down in notational discussions.    A simple three level design for our architectures was captured by using logical, schematic, and detail diagrams. All of these have been integrated in  with pre-defined templates and icons for easily getting started. Furthermore, we've developed a tooling workshop to quickly ramp up on the design methods and tooling we've made available. It's called , has been featured in several.   FINANCE COLLECTION  The collection featured today is centred around architectures in the financial services industry. There are currently two architectures in this collection and we'll provide a short overview of each, leaving the in depth exploration as an exercise for the reader.  Figure 3: Finance architecture collection  In each of these architecture overviews you'll find a table of contents outlining the technologies used, several example schematic diagrams with descriptions, and a link in the last section to open the diagrams directly into the online tooling in your browser.    Financial services institutions understand that today’s banking customers expect fast, easy-to-use services they can tap into anytime, anywhere, and are therefore accelerating adoption of digital technologies to enable a variety of new offerings.  (Note: this project is a new architecture and currently in progress, so sharing one of the schematic architecture diagrams and you can monitor this project for updates as it progresses to completion.)        The use case is a cloud ready, modular open source approach offering a wide range of technology options and allows low-effort integration covering all aspects of an Open Banking implementation.  An offering of (near) real-time payments lets businesses, consumers, and even governments send and accept funds that provide both availability to the recipient and instant confirmation to the sender. Enabling real-time - or at least faster - payments that improve the speed of online payment experiences to customers has the potential to give banks a greater opportunity to win, serve, and retain their customers. By building solutions that capture real-time payment business, banks also can drive higher payment volumes, ideally at lower costs as well as engage new customer segments.          The use case examines financial institutions enabling customers with fast, easy to use, and safe payment services available anytime, anywhere.  If you are interested in more architecture solutions like these, feel free to export the . More architecture collections include:   * Application development  *   * Data engineering  *   *   *   *   * Retail  *   "
}