{
  "title": "Better reusability features on BPMN data types",
  "link": "http://feeds.athico.com/~r/droolsatom/~3/BRIslPGQcCE/better-reusability-features-on-bpmn-data-types.html",
  "author": [
    {
      "name": "Jaime Enriquez Parada",
      "avatar": null
    }
  ],
  "date": "2021-09-29T07:50:36.000Z",
  "feed_title": "KIE Community",
  "content": "The latest addition to our Process Designer is a great feature that enhances the work with formulary data types. We added the ability to define the data type once and use it wherever the data type is needed to be used, as in Process Imports, Process Variables, Global Variables, DataObjects nodes, Multiple Instance Sub-processes and Data Assignments of activities  Before this change, users needed to enter it manually in every place in the process designer. Now users can add it anywhere in the Process Designer. Once the data type is defined, if users  want to use it again, they can do so using the dropdowns of each Process Designer widget that allows selection of data type.  Data types that are already existing in the process are also offered for selection when modelling or editing the process.  For instance, let’s say you want a data object named DataObject of the type com.miType.DataObject, you would enter it as follows:          Now, the data object’s data type is available to be selected in the Process Variables section.  It will also be available in other places where users are able to select data type for variables, assignments etc.        In process variables, you can use the dropdown list box widget to select the already defined Data Type        In Global variables, you can use the dropdown list box widget to declare a default type, custom type, or already defined Data Type        In Imports, you can use the dropdown list box widget to declare a default type, custom type, or already defined Data Type        In Multiple Instances, you can use the dropdown list box widget to declare a default type, custom type, or already defined Data Type      Data Assignments Input      Data Assignments Output    HOW THE SERVICE WORKS  The service is composed of Server Side and Client Side components.   The server-side checks for any predefined Data Objects as Assets in the process while the client-side caches in all defined Data Types within the Diagram.  In BC, both the server and the client-side work hand in hand, while the Kogito(VSCode extension) build has only the client-side.  Regardless of Whether you use it in Business Central or VS Code extension, this feature will surely shorten your Diagram Design Time.      The post appeared first on .  "
}