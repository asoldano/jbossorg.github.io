{
  "title": "Keycloak 18.0.0 released",
  "link": "https://www.keycloak.org/2022/04/keycloak-1800-released",
  "author": [
    {
      "name": null,
      "avatar": null
    }
  ],
  "date": "2022-04-20T00:00:00.000Z",
  "feed_title": "Keycloak Blog",
  "feed_avatar": "https://www.gravatar.com/avatar/87fe00619f08c241da8dfb23d907ffa2?s=50",
  "content": "To download the release go to .   RELEASE NOTES   NEW OPERATOR PREVIEW  With this release, we’re introducing a brand new Keycloak Operator as a preview. Apart from being rewritten from scratch, the main user-facing change from the legacy Operator is the used Keycloak distribution – the new Operator uses the Quarkus distribution of Keycloak. With that, the API (in form of Custom Resource Definitions) has changed. For details, incl. installation and migration instructions, see the .  The will receive updates until Keycloak 20 when the Keycloak WildFly distribution reaches EOL.  OPERATORHUB VERSIONING SCHEME  To avoid version conflicts with the legacy Operator, the 18.0.0 version of the new Operator is released as version 20.0.0-alpha.1 on OperatorHub. The legacy Operator versioning scheme remains the same, i.e. it is released as 18.0.0.  The same pattern will apply for future Keycloak 18 and 19 releases, until version 20 where the legacy Operator reaches EOL.   NEW ADMIN CONSOLE PREVIEW  The new Admin Console is now graduated to preview, with the plan for it to become the default admin console in Keycloak 19.  If you find any issues with the new console, or have some suggestions for improvements, please let us know through .   STEP-UP AUTHENTICATION  Keycloak now supports Step-up authentication. This feature was added in Keycloak 17, and was further polished in this version.  For more details, see .  Thanks to and for the contribution.   CLIENT SECRET ROTATION  Keycloak now supports Client Secret Rotation through customer policies. This feature is now available as a preview feature and allows that confidential clients can be provided with realm policies allowing the use up to two secrets simultaneously.  For more details, see .   RECOVERY CODES  Recovery Codes as another way to do two-factor authentication is now available as a preview feature.   OPENID CONNECT LOGOUT IMPROVEMENTS  Some fixes and improvements were made to make sure that Keycloak is now fully compliant with all the OpenID Connect logout specifications:   * OpenID Connect RP-Initiated Logout 1.0   * OpenID Connect Front-Channel Logout 1.0   * OpenID Connect Back-Channel Logout 1.0   * OpenID Connect Session Management 1.0  For more details, see .   WEBAUTHN IMPROVEMENTS  Keycloak now supports WebAuthn id-less authentication. This feature allows that WebAuthn Security Key will identify the user during authentication as long as the security key supports Resident Keys. For more details, see . Thanks to for the contribution.  There are more WebAuthn improvements and fixes in addition to that.   THE DEPRECATED UPLOAD-SCRIPT FEATURE WAS REMOVED  The upload-script feature has been marked as deprecated for a very long time. In this release, it was completely removed, and it is no longer supported.  If you are using any of these capabilities:   * OpenID Connect Script Mapper   * Script Authenticator (Authentication Execution)   * JavaScript Policies  You should consider reading this in order to understand how to still rely on these capabilities but deploying your scripts to the server rather than managing them through the management interfaces.   SESSION LIMITS  Keycloak now supports limits on the number of sessions a user can have. Limits can be placed at the realm level or at the client level.  For more details, see . Thanks to for the contribution.   SAML ECP PROFILE IS DISABLED BY DEFAULT  To mitigate the risk of abusing SAML ECP Profile, Keycloak now blocks this flow for all SAML clients that do not allow it explicitly. The profile can be enabled using Allow ECP Flow flag within client configuration, see .   QUARKUS DISTRIBUTION  IMPORT REALMS AT STARTUP  The Keycloak Quarkus distribution now supports importing your realms directly at start-up. For more information, check the corresponding .  JSON AND FILE LOGGING IMPROVEMENTS  The Keycloak Quarkus distribution now initially supports logging to a File and logging structured data using JSON.  For more information on the improvements, check the corresponding .  ENVIRONMENT VARIABLE EXPANSION FOR VALUES IN KEYCLOAK.CONF  The Keycloak Quarkus distribution now supports expanding values in keycloak.conf from environment variables.  For more information, check the corresponding .  NEW OPTION DB-URL-PORT  You can now change the port of your jdbc connection string explicitly by setting the new db-url-port configuration option. As for the other convenience options, this option will be overridden by the value of a full db-url, if set.  SPLIT METRICS-ENABLED OPTION INTO HEALTH-ENABLED AND METRICS-ENABLED  The metrics-enabled option now only enables the metrics for Keycloak. To enable the readiness and liveness probe, there’s the new build option health-enabled. This allows more fine-grained usage of these options.   OTHER IMPROVEMENTS   * Account console alignments with latest PatternFly release.   * Support for encrypted User Info endpoint response. Thanks to   * Support for the algorithm RSA-OAEP with A256GCM used for encryption keys.    Thanks to   * Support for login with GitHub Enterprise server. Thanks to   MIGRATION FROM 17.0  Before you upgrade remember to backup your database. If you are not on the previous release refer to for a complete list of migration changes.   STEP-UP AUTHENTICATION  Step-up authentication is a new feature. This feature provides the acr client scope, which contains a protocol mapper that is supposed to add the acr claim in the token. The acr claim is not added automatically now as it was before this version, but it is added with the usage of this client scope and protocol mapper.  The client scope is added as a realm \"default\" client scope and hence will be added to all newly created clients. For performance reasons, the client scope is not automatically added to all existing clients during migration. The clients will not have an acr claim by default after the migration. Consider these possible actions:   * If you do not plan to use step-up authentication feature, but you rely on the    acr claim in the token, you can disable step_up_authentication feature as    described in the . The claim will be added with the value 1 in case of normal    authentication and 0 in case of SSO authentication.   * Add acr client scope to your clients manually by admin REST API or admin    console. This is needed especially if you want to use step-up authentication.    If you have a large number of clients in the realm and want to use acr claim    for all of them, you can trigger some SQL similar to this against your DB.    However, remember to clear the cache or restart the server if Keycloak is    already started:  insert into CLIENT_SCOPE_CLIENT (CLIENT_ID, SCOPE_ID, DEFAULT_SCOPE) select CLIENT.ID as CLIENT_ID, CLIENT_SCOPE.ID as SCOPE_ID, true as DEFAULT_SCOPE from CLIENT_SCOPE, CLIENT where CLIENT_SCOPE.REALM_ID='test' and CLIENT_SCOPE.NAME='acr' and CLIENT.REALM_ID='test' and CLIENT.PROTOCOL='openid-connect';   OPENID CONNECT LOGOUT  Previous versions of Keycloak had supported automatic logout of the user and redirecting to the application by opening logout endpoint URL such as http(s)://example-host/auth/realms/my-realm-name/protocol/openid-connect/logout?redirect_uri=encodedRedirectUri. While that implementation was easy to use, it had potentially negative impact on performance and security. The new version has better support for logout based on the OpenID Connect RP-Initiated Logout specification. The parameter redirect_uri is no longer supported; also, in the new version, the user needs to confirm the logout. It is possible to omit the confirmation and do automatic redirect to the application when you include parameter post_logout_redirect_uri together with the parameter id_token_hint with the ID Token used for login.  The existing deployments are affected in the following ways:   * If your application directly uses links to logout endpoint with the    redirect_uri parameter, you may be required to change this as described    above. Consider either removing the redirect_uri parameter entirely or    replacing it with the id_token_hint and post_logout_redirect_uri parameters.   * If you use java adapters and your application does logout by call    httpServletRequest.logout(), you are not affected because this call uses the    backchannel variant of the logout endpoint and that one was not changed.   * If you use the latest javascript adapter, you are also not affected. However    if your application uses an older version of the JavaScript adapter, you are    affected as this adapter uses the variant of the logout endpoint with the    deprecated redirect_uri parameter. In this case, you may need to upgrade to    the latest version of the JavaScript adapter.   * For the Node.js adapter, the same guideline applies as for the JavaScript    adapter. You are encouraged to update to the latest version as the older    version of the adapter uses the deprecated redirect_uri parameter. With the    latest Node.js adapter, you are not affected as long as you use the logout    based on the /logout URL as described in the documentation or in the Node.js    adapter example. However, in the case when your application directly uses the    method keycloak.logoutUrl, you can consider adding idTokenHint as the second    argument to this method. The possibility to add idTokenHint as second    argument was newly added in this version. The idTokenHint needs to be a valid    ID Token that was obtained during the login. Adding idTokenHint is optional,    but if you omit it, your users will need to confirm the logout screen as    described earlier. Also they will not be redirected back to the application    after logout.  There is a backwards compatibility option, which allows your application to still use the old format of the redirect_uri parameter.  You can enable this parameter when you start the server by entering the following command:  bin/kc.[sh|bat] --spi-login-protocol-openid-connect-legacy-logout-redirect-uri=true start  With this configuration, you can still use the format with the redirect_uri parameter. Note the confirmation screen will be needed if the id_token_hint is omitted.  Warning The backwards compatibility switch will be removed in some future version - probably Keycloak 21. You are encouraged to update your clients as soon as possible as described above rather than rely on this switch.   REMOVAL OF THE UPLOAD-SCRIPTS FEATURE  Previous versions of Keycloak had supported managing JavaScript code through the management interfaces like the administrations console and REST API. Starting from this version this is no longer possible, and you should now deploy your scripts to the server in order to configure the following providers:   * OpenID Connect Script Mapper   * Script Authenticator (Authentication Execution)   * JavaScript Policies  More details about how to deploy scripts to the server are available in the . Note that to use scripts, you are still required to enable the scripts technology preview feature.  kc.[sh|bat] start --auto-build --features=preview  When deploying scripts, the server is going to automatically create their corresponding providers so that you can select them when configuring authentication flows, mappers, and authorization policies.  In general, the steps to update your realms are the following:   * Before upgrading, remove any script provider you are using.   * After the upgrade, deploy your scripts following the instructions in the .   * Update your authentication flows, mappers, and the client authorization    settings to use the providers created from the scripts deployed to the    server.   ACCOUNT CONSOLE PATTERNFLY UPGRADE  The Patternfly (PF) React libraries have been updated updated, @patternfly/react-core from v3.153.3 to v4.147.0, @patternfly/react-icons from v3.15.16 to v 4.11.8, and @patternfly/react-styles from v3.7.14 to v4.11.8. Several minor UI updates were made to bring the account console into alignment with PF design standards.  Custom developed account UIs might not be compatible with these updates due to the breaking changes in PF. Most breaking changes should be resovlable by updating props on PF components.  Resources:   * [Patternfly docs]()  Components known to have breaking changes:   * Alert   * action prop changed to actionClose   * Expandable   * renamed to ExpandableSection   * Title   * size attr now uses TitleSizes   * DataListContent   * noPadding changed to hasNoPadding   * Grid, Stack, Level, Gallery   * gutter attr changed to hasGutter   * Modal   * sizing control changed from, e.g. isLarge, to use ModalVariant, e.g.    variant={ModalVariant.large}   * Select   * ariaLabelTypeAhead to typeAheadAriaLabel   * isExpanded to isOpen   * ariaLabelledBy to aria-labelledby   * DataListContent   * noPadding to hasNoPadding   QUARKUS DISTRIBUTION: SPLIT METRICS-ENABLED OPTION INTO HEALTH-ENABLED AND METRICS-ENABLED  The metrics-enabled option now only enables the metrics for Keycloak. To enable the readiness and liveness health endpoints, there’s a new boolean option health-enabled. This allows more fine-grained usage of these options, e.g. enabling metrics but not enabling readiness/liveness probes for on-premise use cases. In order to keep the same behaviour as before when metrics-enabled=true was set, you need to additionally set health-enabled=true when building Keycloak.   ALL RESOLVED ISSUES   NEW FEATURES   * Add documentation for recovery codes keycloak-documentation  * OIDC RP-Initiated logout endpoint keycloak-documentation  * Documentation for session-limits-feature keycloak-documentation  * Recovery authentication codes keycloak  * JPA map storage: Groups no-downtime store keycloak storage  * JPA map storage: Realm no-downtime store keycloak storage  * JPA map storage: Authentication session no-downtime store keycloak storage  * Hot Rod map storage: Realm no-downtime store keycloak storage  * Hot Rod map storage: User no-downtime store keycloak storage  * Hot Rod map storage: Client scope no-downtime store keycloak storage  * Hot Rod map storage: Login failure no-downtime store keycloak storage  * Hot Rod map storage: Authentication session no-downtime store keycloak    storage  * Hot Rod map storage: User / client session no-downtime store keycloak storage  * Hot Rod map storage: Roles no-downtime store keycloak storage  * Secret references in `serverConfiguration` in the Keycloak CRD keycloak    operator  * Improve naming in `serverConfiguration` in the Keycloak CRD keycloak operator  * Pod Templates in operator keycloak operator  * Clustering support in operator keycloak operator  * Ingress in operator keycloak operator  * Tests for Keycloak Deployment keycloak operator  * Convert realm entities into interface keycloak storage  * Convert login failure entities into interface keycloak storage  * Convert authentication session entities into interface keycloak storage  * Convert user / client session entities into interface keycloak storage  * SSL config in the operator keycloak operator  * Use prod profile in Quarkus dist keycloak operator  * Extensions support in the operator keycloak operator  * Generate CRDs compatible with the previous keycloak operator  * Initial admin user bootstrapping via the operator keycloak operator  * Read-write LDAP implementation for roles keycloak storage  * Support for acr_values_supported in OIDC well-known endpoint keycloak  * Option for client to specify default acr level keycloak  * Replace 'Store LoA in User Session' with 'Max Age' keycloak  * Enable Health endpoints even with metrics disabled keycloak dist/quarkus  * Release process for operator image keycloak operator  * Support for UserInfo response encrypted keycloak  * Automatic scan Keycloak docker image for vulnerabilities keycloak  * Add expiration field for root authentication session keycloak storage  * Allow WebAuthn idless login flow keycloak  * Improve OIDC RP-Initiated Logout keycloak  * Prepare scripts for generating OLM resources keycloak operator  * Operator 18.0.0 release notes keycloak docs   ENHANCEMENTS   * Adjust nodejs adapter with OIDC RP-Initiated Logout keycloak-nodejs-connect  * Update MS SQL JDBC driver version to 10.2.0 keycloak-containers  * Revise documentation for WebAuthn keycloak-documentation  * Release notes for WebAuthn idless keycloak-documentation  * Update migration documentation for node.js adapter about logout    keycloak-documentation  * Remove node_modules folder from the Keycloak repository keycloak admin/ui  * Client Policies : An executor rejecting a request based on a client role    keycloak  * Client Policies : An executor rejecting all requests keycloak  * Client Policies : Negative logic by a policy keycloak  * Import realm at startup keycloak  * Improve readability of CacheExpirationTest keycloak storage  * Test more recent versions of Spring Boot keycloak testsuite  * Make Keycloak Model Map JPA module JDK 17 ready keycloak storage  * Hide 'unknown' transport media type label for WebAuthn authenticators    keycloak authentication/webauthn  * JPA map storage: Add support for CockroachDB keycloak storage  * Remove values from error message in CLI when key is unknown keycloak    dist/quarkus  * Keycloak configuration in testsuite doesn't provide properties for supported    map storages keycloak storage  * Test WebAuthn with multiple browsers keycloak testsuite  * Review Configuring outgoing HTTP requests keycloak  * Provide readme to container submodule of quarkus dist keycloak dist/quarkus  * Review Keycloak X Configuration Guide keycloak  * Add prefix \"kc_\" to all existing tables keycloak storage  * Update Quarkus to 2.7.1 keycloak dist/quarkus  * Ensure that Liquibase is only called once per area keycloak storage  * Improvements to maven repository settings keycloak  * Support for frontchannel_logout_session_required OIDC client parameter    keycloak  * Test operator running locally in GHA keycloak operator  * Support for acr in keycloak.js keycloak  * Protocol mapper and client scope for \"acr\" claim keycloak  * Possibility to ignore tests for particular browsers keycloak testsuite  * Separate probes toggle from metrics keycloak dist/quarkus  * Allow Account V2 theme to be built conditionally keycloak account/ui  * Update postgresql.version to 42.3.3 for quarkus distribution keycloak    dist/quarkus  * Edit Configuring for Production keycloak  * Allow adding custom headers in HTTP Requests performed by keycloak-js adapter    keycloak  * Introduce Keycloak \"feature\" for step-up authentication keycloak  * getParameterCount() can be used instead of getParameterTypes().length and    getParameters().length keycloak core  * Update to Quarkus 2.7.2 keycloak dist/quarkus  * Release K8s resources for installing operator without OLM keycloak operator  * Change String client.id to ClientModel client in ResourceServerStore keycloak    storage  * container guide: missing paragraph about initial admin bootstrap in a    container keycloak  * Disable Infinispan caching layer for Authorization Map storage keycloak    storage  * Add File Log Support keycloak dist/quarkus  * Allow Edge tests in Admin Console tests keycloak admin/ui  * Allow exposing some initial provider config options via web site keycloak    dist/quarkus  * Reduce log size for the model tests keycloak storage  * Update Quarkus Distribution to 2.7.3 keycloak dist/quarkus  * Add secret rotation to JWTClientSecretAuthenticator keycloak  * Make WebAuthn feature default for the product version keycloak    authentication/webauthn  * Mismatch between RESTEasy dependency on Operator and Quarkus distribution    keycloak operator  * Attributes field can be stored with empty value in some cases keycloak    storage  * Disable auto-build when custom image is provided keycloak operator  * Introduce an additional dependency scanner for Keycloak keycloak ci  * Add merge tasks optimization to ConcurrentHashMapKeycloakTransaction.delete    keycloak storage  * Add missing `JsonPropertyDescription` to fields in Keycloak CRD keycloak    operator  * Support Filtering by Enabled Attribute on /Users/Count Endpoint keycloak    admin/api  * Fix CVEs and change base image for the operator keycloak operator  * Set autofocus on the 'Sign In With Security Key' button keycloak    authentication/webauthn  * Data type for timestamp and expiration in Map Storage keycloak storage  * Usage of raw quarkus runtime properties without a build keycloak dist/quarkus  * Update to the latest version of the official actions used by Keycloak    keycloak ci  * Replace the dependency cache on GitHub Actions keycloak ci  * Upgrade to WildFly 26.1.0.Final keycloak dist/wildfly  * Graduate new Admin Console to preview keycloak admin/ui  * Trigger Trivy workflow after the build of our nightly images keycloak ci  * CI should run on the same Java distribution we use to publish keycloak  * Possibility to add scope to admin-client TokenManager keycloak  * Review the pinned guides of the operator docs keycloak operator  * Update Kubernetes Client to 5.12.1 keycloak operator  * Detail how to include extensions in custom images in server docs keycloak    operator  * Keycloak account console PatternFly design system alignment keycloak  * Add new german locales keycloak translations  * Keep Github Actions up-to-date keycloak ci  * keycloak-js download should be installable through npm keycloak  * Document usage of hostname has to comply with standards keycloak dist/quarkus  * Identity brokering support for GitHub Enterprise server keycloak  * Change the CRD API group in the operator keycloak operator  * Ignore license compliance warnings keycloak ci  * keycloak-x - unable to modify mssql/SQLServer port to anything other than    1433 keycloak dist/quarkus  * Remove deployment module dependency from server module keycloak  * Avoid initializing the OWASP HTML Sanitizer at startup keycloak  * Obtaining the resource version using native SQL during startup keycloak  * Determine Keycloak image tag from Operator version keycloak operator  * Ignore WebAuthnIdLessTest for Firefox keycloak testsuite   BUGS   * Latest openshift-examples/keycloak.yaml of 17.0.0 does not work    keycloak-quickstarts  * Some tests broken due the OIDC RP-Initiated Logout keycloak-quickstarts  * CVE-2022-21724 vulnerability related to postgresql dependency    keycloak-containers dependencies  * Typo in LDAP documentation regarding WRITABLE mode keycloak-documentation  * Unknown essential acr claim does not result in an error keycloak    authentication  * Pre-loaded sessions live forever in cache keycloak storage  * Exact match user query by email is doing a full table scan keycloak storage  * Keycloak import in TypeScript without allowSyntheticDefaultImports keycloak    adapter/javascript  * Page layout may be unexpected due to Quirks Mode keycloak oidc  * Definition of keycloak-wildfly-adapter-dist in keycloak-adapter-bom doesn't    work keycloak adapter/jee  * includeInAccessTokenResponse.label and    includeInAccessTokenResponse.label.tooltip english messages are missing    keycloak admin/ui  * OTPPolicyTest failures in pipeline keycloak testsuite  * lifespan property in PathCacheConfig is missing @JsonProperty annotation    keycloak authorization-services  * JavaDoc API not published on keycloak.org (starting with 15.1) keycloak docs  * Allow keycloak-js default export to be used as a constructor keycloak    adapter/javascript  * Auth execution \"Condition - User Attribute\" missing keycloak authentication  * LDAP Integration tests fail on OpenJDK 17 keycloak testsuite  * Bug when updating user attributes with duplicated values keycloak storage  * IDELauncher not loading Resources when opening welcomepage keycloak    dist/quarkus  * GHA Model Tests are still sometimes failing due to timeout keycloak ci  * White-space separated CLI options are treated as 2 separate options in    errorcase keycloak dist/quarkus  * Path parameter is missing in the get account endpoint keycloak account/api  * Configure CodeQL to perform the analysis of the main branch keycloak  * French translation issues for email verification keycloak translations  * Nonce parameter should be required in authorizationEndpoint only when    \"id_token\" is included in response_type keycloak oidc  * Handle OIDC authz request with \"response_type\" missing and    \"response_mode=form_post\" keycloak oidc  * The CodeQL analysis is broken due to the large content of the generated SARIF    file keycloak ci  * AccountLinkSpringBootTest failures in pipeline keycloak testsuite  * Unstable AuthenticationFlowCallbackProviderTest for undertow-map keycloak    testsuite  * ConfigurationTest can not run on Windows keycloak testsuite  * Missing javadoc artifact for spring-boot-container-bundle and    spring-boot-legacy-container-bundle keycloak adapter/spring  * Properly execute AuthenticationFlowCallbackProviderTest with Map storage    keycloak testsuite  * Container Guide still references old keycloak-x repository keycloak docs  * keycloak-js 17.0.0: Can't import the named export 'sha256' from non    EcmaScript module keycloak adapter/javascript  * Client offline sessions are stored with wrong client id after server restart    when custom ClientStorageProvider is used keycloak storage  * Realm localization translations are not available in the Account console    keycloak account/ui  * IP:8080/auth page not found keycloak dist/quarkus  * Kubernetes cache-stack documentation update keycloak dist/quarkus  * NPE when viewing flow executions and authentication provider not deployed    keycloak  * Test failures in Operator CI keycloak testsuite  * Operator CI is broken keycloak ci  * Chapter about the initial configuration misses setup of the initial admin    user keycloak docs  * docs: Container documentation refers to multiple image sources keycloak  * docs: Getting started with OpenShift keycloak docs  * Wrong spelling in StringKeyConvertor keycloak storage  * Flaky KeycloakServicesE2EIT.testDiscoveryServiceDurability keycloak ci  * Password blacklists folder keycloak dist/quarkus  * java.io.FileNotFoundException:    ..../keycloak-17.0.0/model/jpa/target/test-classes/log4j.properties keycloak    storage  * Incorrect username logged for federated accounts keycloak authentication  * Bad performance of admin event view in large environments keycloak storage  * DeleteAccountTest failure in the test pipeline keycloak testsuite  * Failure to upload the SARIF file on pull requests keycloak ci  * Saml AuthnContextDecl in SAML Assertion is ommitted keycloak saml  * Hang Detection Timeout kicks in Operator Tests keycloak operator  * Attestation Conveyance Verification with YubiKey keycloak dist/quarkus  * Keycloak is not fully supporting XML boolean values for SAML keycloak saml  * Keycloak Quarkus distribution fail to start using h2 on OpenShift keycloak    dist/quarkus  * keycloak.js fails to load from the UI when behind a reverse proxy and    KC_PROXY = `edge` keycloak  * keycloak-common module has Java 1.8 API calls while the module is set to use    Java 1.7 keycloak core  * MigrationModelTest broken with version 999 keycloak storage  * SAML Adapters tests start failing in recent versions of EAP/wildfly keycloak    saml  * [Docs] conflict between best practices regarding the JavaScript adapter    keycloak docs  * AbstractClientyEntity is missing isUpdated implementation keycloak storage  * Getting 404 not found when using templates in custom provider deployed under    providers folder keycloak dist/quarkus  * Various NPEs using the realm create REST API keycloak admin/api  * Allow overriding the host header using X-Forwarded-Host keycloak dist/quarkus  * Script Mapper Performance Issues - Java 8 and Java 11 keycloak  * Webauthn tests broke because of RP-Initiated logout changes keycloak  * Account console not functional when running KeyCloak behind a reverse proxy    keycloak docs  * Update Infinispan to 13.0.8 to fix vulnerabilities reported on XStream    (CVE-2021-43859) keycloak dist/quarkus  * Testsuite failures when JPA Map Storage is used for realms keycloak storage  * Update jackson-databind dependency to fix CVE-2020-36518 keycloak    dist/quarkus  * Blank admin console page in Keycloak 17.0.1 keycloak  * SOAPBindingTest is failing with NoClassDefFoundError - SOAPException keycloak    saml  * keycloak-core module is using Java 1.8 class while it is set to use Java 1.7    keycloak  * Admin console loads keycloak.js from authUrl keycloak dist/quarkus  * AbstractClientEntity should implement clearUpdatedFlag keycloak storage  * CodeQL analysis always fails keycloak  * Nullpointer exceptions on resource page keycloak authorization-services  * The associated policies of a resource returns wrong policies keycloak  * The operator should go in CrashLoopBackoff if the CRDs are not present    keycloak operator  * Model tests for LDAP fail with a message \"Could not unbind DN\" and \"ignoring    the message MessageType UNBIND_REQUEST\" keycloak storage  * NPE when caching policies based on scopes without a resource keycloak  * Update jackson-databind dependency in the main POM file to fix CVE-2020-36518    keycloak dependencies  * LdapStorageProvider should fail authenticate if credentialInput is not of    type UserCredentialModel keycloak ldap  * CodeQL is failing due to missing dependency keycloak storage  * Update wildfly-elytron dependency in the main Quarkus distribution    (CVE-2021-3642) keycloak dependencies  * Operator CI is broken reporting docker login failures keycloak  * Handling LDAP Map storage problems when removing roles keycloak storage  * Update jackson-databind dependency to fix CVE-2020-36518 in Operator keycloak    operator  * Update WildFly Elytron on the legacy distribution (CVE-2021-3642) keycloak    dependencies  * Unmatched braces in error log formatter in DefaultKeyManager keycloak core  * Failed to list UMA policies when a user who was used in a policy got deleted.    keycloak  * Mistyping correction keycloak core  * Replace the cryptographic algorithm by SHA-2 keycloak storage  * Missing a duplicated parameter check in device authorization endpoint.    keycloak  * WebAuthnSigningInTest failures caused by different titles keycloak testsuite  * kc.sh Does Not Allow Spaces in Filenames keycloak  * Typo in HostnamePropertyMappers.java keycloak  * Operator CI broken on main keycloak operator  * Fix error response for invalid characters keycloak core  * Disallow special characters in usernames to prevent confusion with similarly    looking usernames keycloak   UPGRADING  Before you upgrade remember to backup your database and check the for anything that may have changed."
}