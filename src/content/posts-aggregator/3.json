{
  "title": "Keycloak 22.0.0 released",
  "link": "https://www.keycloak.org/2023/07/keycloak-2200-released",
  "author": [
    {
      "name": null,
      "avatar": null
    }
  ],
  "date": "2023-07-11T00:00:00.000Z",
  "feed_title": "Keycloak Blog",
  "feed_avatar": "https://www.gravatar.com/avatar/87fe00619f08c241da8dfb23d907ffa2?s=50",
  "content": "To download the release go to .   RELEASE NOTES   SERVER DISTRIBUTION  JAVA 11 SUPPORT REMOVED  Running the Keycloak server with Java 11 is no longer supported. Java 11 was deprecated in Keycloak 21 with the announced plan to be removed in Keycloak 22.  UPGRADE TO QUARKUS 3.X  Keycloak upgraded to version 3.2.0.Final of the Quarkus Java framework. Quarkus 3.x continues the tradition of propelling Java development by moving fast and providing a cutting-edge user experience with the latest technologies.  TRANSITION FROM JAVA EE TO JAKARTA EE  As part of upgrading to Quarkus 3.x Keycloak migrated its codebase from Java EE (Enterprise Edition) to its successor Jakarta EE, which brings various changes into Keycloak. We have upgraded all Jakarta EE specifications in order to support Jakarta EE 10.  CONTEXT AND DEPENDENCY INJECTION NO LONGER ENABLED TO JAX-RS RESOURCES  In order to provide a better runtime and leverage as much as possible the underlying stack, all injection points for contextual data using the javax.ws.rs.core.Context annotation were removed. The expected improvement in performance involves no longer creating proxies instances multiple times during the request lifecycle, and drastically reducing the amount of reflection code at runtime.  UPGRADE TO HIBERNATE ORM 6  Keycloak now benefits from the upgrade to Hibernate ORM 6.2, which includes improved performance, better SQL, modern JDK support, and support for modern RDBMS features.  ELYTRON CREDENTIAL STORE REPLACEMENT  The previous and now removed WildFly distribution provided a built-in vault provider that reads secrets from a keystore-backed Elytron credential store. As this is no longer available, we have added a new implementation of the Keycloak Vault SPI called Keycloak KeyStore Vault. As the name suggests, this implementation reads secrets from a Java keystore file. Such secrets can be then used within multiple places of the Administration Console. For further details, see and the latest .  KEYSTORE CONFIG SOURCE ADDED  In relation to the KeyStore Vault news, we also integrated Quarkus’s recently released feature called KeyStore Config Source. This means that among the already existing configuration sources (CLI parameters, environment variables and files), you can now configure your Keycloak server via configuration properties stored in a Java keystore file. You can learn more about this feature in the .  HOSTNAME DEBUG TOOL  As a number of users have had problems with configuring the hostname for the server correctly there is now a new helper tool to allow debugging the configuration.  PASSTHROUGH PROXY MODE CHANGES  Installations which use Keycloak’s --proxy configuration setting with mode passthrough should review the documentation as the behavior of this mode has changed.  EXPORT AND IMPORT PERFORM AN AUTOMATIC BUILD  In previous releases, the export and import commands required a build command to be run first. Starting with this release, the export and import commands perform an automatic rebuild of Keycloak if a build time configuration has changed.   ADMIN CONSOLE  ACCOUNT CONSOLE V1 REMOVAL  The old Account Console (v1) is now completely removed. This version of the Account Console was marked as deprecated in Keycloak 12.  ACCOUNT CONSOLE V3 PROMOTED TO PREVIEW  In version 21.1.0 of Keycloak the new Account Console (version 3) was introduced as an experimental feature. Starting this version it has been promoted to a preview feature.  ACCOUNT CONSOLE TEMPLATE VARIABLES REMOVED  Two of the variables exposed to the Account Console V2 and V3 templates (isEventsEnabled and isTotpConfigured) were left unused, and have been removed in this release.  It is possible that if a developer extended the Account Console theme, he or she could make use of these variables. So make sure that these variables are no longer used if you are extending the base theme.  CHANGES TO CUSTOM ADMIN CONSOLE MESSAGES  The Admin Console (and soon also the new Account Console) works slightly different than the rest of Keycloak in regards to how keys for internationalized messages are parsed. This is due to the fact that it uses the library for internationalization. Therefore when defining custom messages for the Admin Console under \"Realm Settings\" ➡ \"Localization\" best practices for i18next must be taken into account. Specifically, when defining a message for the Admin Console it is it important to specify a in the key of your message.  For example, let’s assume we want to overwrite the message shown to the user when a new realm has been created. This message is located in the dashboard namespace, same as the name of the original file that holds the messages (dashboard.json). If we wanted to overwrite this message we’ll have to use the namespace as a prefix followed by the key of the message separated by a colon, in this case it would become dashboard:welcome.   JAVASCRIPT ADAPTER  LEGACY PROMISE API REMOVED  With this release, we have removed the legacy Promise API methods from the Keycloak JS adapter. This means that calling .success() and .error() on promises returned from the adapter is no longer possible.  REQUIRED TO BE INSTANTIATED WITH THE NEW OPERATOR  In a previous release we started to actively log deprecation warnings when the Keycloak JS adapter is constructed without the new operator. Starting this release doing so will throw an exception instead. This is to align with the expected behavior of , which will allow further refactoring of the adapter in the future.   ADMIN API  RENAMED ADMIN LIBRARY ARTIFACTS  After the upgrade to Jakarta EE, artifacts for Keycloak Admin clients were renamed to more descriptive names with consideration for long-term maintainability. We still provide two separate Keycloak Admin clients, one with Jakarta EE and the other with Java EE support.  SUPPORT FOR COUNT USERS BASED ON CUSTOM ATTRIBUTES  The User API now supports querying the number of users based on custom attributes. For that, a new q parameter was added to the /{realm}/users/count endpoint.  The q parameter expects the following format q=<name>:<value> <name>:<value>. Where <name> and <value> represent the attribute name and value, respectively.   OPERATOR  K8S.KEYCLOAK.ORG/V2ALPHA1 CHANGES  The are additional fields available in the keycloak.status to facilitate keycloak being a scalable resource. There are also additional fields that make the status easier to interpret such as observedGeneration and condition observedGeneration and lastTransitionTime fields.  The condition status field was changed from a boolean to a string for conformance with standard Kubernetes conditions. In the CRD it will temporarily be represented as accepting any content, but it will only ever be a string. Please make sure any of your usage of this field is updated to expect the values \"True\", \"False\", or \"Unknown\", rather than true or false.  CO-MANAGEMENT OF OPERATOR RESOURCES  In scenarios where advanced management is needed you may now directly update most fields on operator managed resources that have not been set by the operator directly. This can be used as an alternative to the unsupported stanza of the Keycloak spec. Like the unsupported stanza these direct modifications are not considered supported. If your modifications prevent the operator from being able to manage the resource, there Keycloak CR will show this error condition and the operator will log it.   IDENTITY BROKERING  ESSENTIAL CLAIM CONFIGURATION IN OPENID CONNECT IDENTITY PROVIDERS  OpenID Connect identity providers support a new configuration to specify that the ID tokens issued by the identity provider must have a specific claim, otherwise the user can not authenticate through this broker.  The option is disabled by default; when it is enabled, you can specify the name of the JWT token claim to filter and the value to match (supports regular expression format).  SUPPORT FOR JWE ENCRYPTED ID TOKENS AND USERINFO RESPONSES IN OPENID CONNECT PROVIDERS  The OpenID Connect providers now support for the ID Token and the UserInfo response. The providers use the realm keys defined for the selected encryption algorithm to perform the decryption.  HARDCODED GROUP MAPPER  The new hardcorded group mapper allows adding a specific group to users brokered from an Identity Provider.  USER SESSION NOTE MAPPER  The new user session note mapper allows mapping a claim to the user session notes.   LDAP FEDERATION  LDAPS-ONLY TRUSTSTORE OPTION REMOVED  LDAP option to use truststore SPI Only for ldaps has been removed. This parameter is used to select truststore for TLS-secured LDAP connection: either internal Keycloak truststore is picked (Always), or the global JVM one (Never).  Deployments where Only for ldaps was used will automatically behave as if Always option was selected for TLS-secured LDAP connections.   REMOVED OPENSHIFT INTEGRATION FEATURE  The openshift-integration preview feature that allowed replacing the internal IdP in OpenShift 3.x with Keycloak was removed from Keycloak codebase into separate extension project.   MIGRATION FROM 21.1  Before you upgrade remember to backup your database. If you are not on the previous release refer to for a complete list of migration changes.   TRANSITION FROM JAVA EE TO JAKARTA EE  Keycloak migrated its codebase from Java EE (Enterprise Edition) to its successor Jakarta EE, which brings various changes into Keycloak.  We have upgraded all Jakarta EE specifications in order to support Jakarta EE 10, such as:   * Jakarta Persistence 3.1   * Jakarta RESTful Web Services 3.1   * Jakarta Mail API 2.1   * Jakarta Servlet 6.0   * Jakarta Activation 2.1  Jakarta EE 10 provides a modernized, simplified, lightweight approach to building cloud-native Java applications. The main changes provided within this initiative are changing the namespace from javax.* to jakarta.*. It does not apply for javax.* packages provided directly in the JDK, such as javax.security, javax.net, javax.crypto, etc.  You can be affected by these changes in your custom extensions, providers or JPA entities.   UPGRADE TO QUARKUS 3  Keycloak upgraded to version 3 of the Quarkus Java framework. Quarkus 3 continues the tradition of propelling Java development by moving fast and providing a cutting-edge user experience with the latest technologies. It continues to improve overall performance and efficiency.  Quarkus 3 is based on Jakarta EE 10, the same as Keycloak, creating smooth interoperability between them. In addition, it contains Eclipse MicroProfile 6, which aligns with Jakarta EE 10 Core Profile. The central part of the Quarkus 3 upgrade is built-in support for JPA 3.1 and Hibernate ORM 6.  QUARKUS.HIBERNATE-ORM.* PROPERTIES NO LONGER WORKING  For Quarkus 3, Hibernate ORM configurations must be specified in either the persistence.xml file or in Quarkus properties, but not in both places. Keycloak uses a persistence.xml file, therefore, it is no longer possible to override Keycloak’s JPA store configurations via Quarkus’ configuration properties for the default persistence unit whose names start with quarkus.hibernate-orm.   UPGRADE TO HIBERNATE ORM 6  Keycloak now benefits from the upgrade to Hibernate ORM 6.2, which includes improved performance, better SQL, modern JDK support, and support for modern RDBMS features. The performance improvements primarily affect JDBC, HQL Translation, and Criteria Translation.  If you have custom providers or JPA entities, these changes may affect you.  We recommend reviewing the or the for more information.   LEGACY PROMISE API REMOVED FROM KEYCLOAK JS ADAPTER  The legacy Promise API methods have been removed from the Keycloak JS adapter. This means that calling .success() and .error() on promises returned from the adapter is no longer possible. Instead standardized Promise methods such as and should be used.  Before migration:  const keycloak = new Keycloak();  keycloak.init()   .success(function(authenticated) {     alert(authenticated ? 'authenticated' : 'not authenticated');   }).error(function() {     alert('failed to initialize');   });  After migration:  const keycloak = new Keycloak();  keycloak.init()   .then(function(authenticated) {     alert(authenticated ? 'authenticated' : 'not authenticated');   }).catch(function() {     alert('failed to initialize');   });  Or alternatively, when using the keyword to unwrap these promises:  const keycloak = new Keycloak();  try {   const authenticated = await keycloak.init();   alert(authenticated ? 'authenticated' : 'not authenticated'); } catch (error) {   alert('failed to initialize'); }   EXPORT AND IMPORT PERFORM AN AUTOMATIC BUILD  In previous releases, the export and import commands required a build command to be run first. Starting with this release, the export and import commands perform an automatic rebuild of Keycloak if a build time configuration has changed.  When migrating existing scripts that run a build command first, migrate by adding the --optimized command line option to the export and import command to avoid Keycloak automatically re-building the image. Not adding the --optimized option in this might make Keycloak trigger a rebuild and revert to the default values, and then connecting to the database for export and import will not work.  The following examples assume that runtime parameters like a database password are provided via a configuration file or an environment variable.  Before migration: Running the build command before running the export command  bin/kc.[sh|bat] build --db=postgres ... bin/kc.[sh|bat] export --dir <dir>  After migration: Adding --optimized to the export command  bin/kc.[sh|bat] build --db=postgres ... bin/kc.[sh|bat] export --optimized --dir <dir>  After migration: Leveraging the auto-build functionality  bin/kc.[sh|bat] export --dir <dir> --db=postgres ...  NOTE  When the auto-build runs, the build time options will be in effect for all subsequent commands that are started with the --optimized flag, including the start command.  In previous releases the export and import commands allowed runtime parameters such as a database URL only in configuration files or environment variables. Starting with this release, those runtime parameters are now available on the command line as well. Use the --help option to find out about the supported parameters.   RENAMED KEYCLOAK ADMIN CLIENT ARTIFACTS  After the upgrade to Jakarta EE, artifacts for Keycloak Admin clients were renamed to more descriptive names with consideration for long-term maintainability. We still provide two separate Keycloak Admin clients, one with Jakarta EE and the other with Java EE support.  We stopped releasing the org.keycloak:keycloak-admin-client-jakarta artifact. The default one for the Keycloak Admin client with Jakarta EE support is org.keycloak:keycloak-admin-client (since version 22.0.0).  The new artifact with Java EE support is org.keycloak:keycloak-admin-client-jee.  JAKARTA EE SUPPORT  Before migration:  <dependency>     <groupId>org.keycloak</groupId>     <artifactId>keycloak-admin-client-jakarta</artifactId>     <version>21.0.0</version> </dependency>  After migration:  <dependency>     <groupId>org.keycloak</groupId>     <artifactId>keycloak-admin-client</artifactId>     <version>22.0.0</version> </dependency>  JAVA EE SUPPORT  Before migration:  <dependency>     <groupId>org.keycloak</groupId>     <artifactId>keycloak-admin-client</artifactId>     <version>21.0.0</version> </dependency>  After migration:  <dependency>     <groupId>org.keycloak</groupId>     <artifactId>keycloak-admin-client-jee</artifactId>     <version>22.0.0</version> </dependency>   PASSTHROUGH PROXY MODE CHANGES  Keycloak’s proxy configuration setting for mode passthrough no longer parses HTTP forwarding headers in the request, as when a proxy forwards an HTTPS connection in passthrough mode, a proxy is unable to add, remove or update HTTP headers.  Installations that want the HTTP headers in the client’s request to be parsed should use the edge or reencrypt setting.  See for details.   CONSISTENT FALLBACK MESSAGE RESOLVING FOR ALL THEMES  This change only may affect you when you are using realm localization messages.  Up to this version, the resolving of fallback messages was inconsistent across themes, when realm localization messages were used. More information can be found in the following .  The implementation has now been unified for all themes. In general, the message for the most specific matching language tag has the highest priority. If there are both a realm localization message and a Theme 18n message, the realm localization message has the higher priority. Summarized, the priority of the messages is as follows (RL = realm localization, T = Theme i18n files): RL <variant> > T <variant> > RL <region> > T <region> > RL <language> > T <language> > RL en > T en.  Probably this can be better explained with an example: When the variant de-CH-1996 is requested and there is a realm localization message for the variant, this message will be used. If such a realm localization message does not exist, the Theme i18n files are searched for a corresponding message for that variant. If such a message does not exist, a realm localization message for the region (de-CH) will be searched. If such a realm localization message does not exist, the Theme i18n files are searched for a message for that region. If still no message is found, a realm localization message for the language (de) will be searched. If there is no matching realm localization message, the Theme i18n files are be searched for a message for that language. As last fallback, the English (en) translation is used: First, an English realm localization will be searched - if not found, the Theme 18n files are searched for an English message.   USERQUERYPROVIDER CHANGES  UserQueryProvider interface was split into two. One is UserQueryMethodsProvider providing capabilities for querying users. Second one is UserCountMethodsProvider which provides capability for counting number of users in particular storage.  Keycloak now has the ability to differentiate between user storage providers that can efficiently execute count queries and those that cannot. The UserQueryProvider interface still exists and extends both new interfaces. Therefore, there is no need for any modifications in the existing implementations of UserQueryProvider since it retains the same methods.   LDAPSTORAGEPROVIDER SEARCH CHANGES  Starting with this release Keycloak uses a pagination mechanism when querying federated LDAP database. Searching for users should be consistent with search in local database.  Since this release LDAPStorageProvider implements only UserQueryMethodsProvider, not UserQueryProvider.   DEPRECATION OF KEYCLOAK OPENID CONNECT ADAPTERS  Starting with this release, we no longer will invest our time on the following Keycloak OpenID Connect Adapters:   * Keycloak Wildfly OpenID Connect Adapter   * Keycloak JEE Servlet OpenID Connect Adapter   * Keycloak Spring Boot and Spring Security OpenID Connect Adapter  This move is already reflected in our documentation and in our quickstart repository. Please, consider looking at the following references for more information:   *    *   We recommend starting to look into moving your applications to the alternatives from the references above. Those adapters should not be available anymore in future releases.   DEPRECATION OF KEYCLOAK JEE SAML ADAPTER  The Keycloak JEE SAML Adapter has been discontinued, and we will no longer invest our time on its development following this release.  The official adapter is now based on Jakarta and should be used as soon as you switch your applications to this technology.  This change is already in our documentation and in our quickstart repository. For more information, please consider looking at the following references:   *    *   If you cannot migrate your applications to Jakarta, you can still use the \"legacy\" SAML JEE adapter and still be able to integrate with future releases of the server. However, consider upgrading your applications as soon as possible because we are no longer providing support to JEE.   CHANGES FOR OPENSHIFT-INTEGRATION FEATURE  The preview feature openshift-integration was removed from Keycloak codebase and moved into separate extension. This includes moving of related providers such as custom client storage provider and token review endpoint for Openshift integration.  If you used this feature, you should not use the openshift-integration feature anymore when starting Keycloak server and instead you need to deploy the JAR file from custom extension. You can check the and the instructions in it’s README file for how to deploy the extension to your Keycloak server.  Note The Openshift extension is not officially supported and maintained by Keycloak team. You can use it only at your own risk.  HTTP CHALLENGE FLOW REMOVED  The built-in authentication flow http challenge was removed along with the authenticator implementations no-cookie-redirect, basic-auth, and basic-auth-otp. The http challenge authentication flow was also intended for Openshift integration and therefore it was removed along with other related capabilities as described above. Authenticator implementations were moved to the Openshift extension described in the previous paragraph.  If you use the http challenge flow as a realm flow or as First Broker Login or Post Broker Login flow for any of your identity providers, the migration is not possible. Be sure to update your realm configuration to eliminate the use of the http challenge flow before migration. If you use the http challenge flow as Authentication Flow Binding Override for any client, the migration would complete, but you could no longer log in to that client. After the migration, you would need to re-create the flow and update the configuration of your clients to use the new/differentJson flow.   REMOVING THIRDPARTY DEPENDENCIES  The removal of openshift-integration allows us to remove few thirdparty dependencies from Keycloak distribution. This includes openshift-rest-client, okio-jvm, okhttp, commons-lang, commons-compress, jboss-dmr and kotlin-stdlib. This means that if you use any of these libraries as dependencies of your own providers deployed to Keycloak server, you may also need to copy those jar files explicitly to the Keycloak distribution providers directory as well.   CONTEXT AND DEPENDENCY INJECTION NO LONGER ENABLED TO JAX-RS RESOURCES  In order to provide a better runtime and leverage as much as possible the underlying stack, all injection points for contextual data using the javax.ws.rs.core.Context annotation were removed. The expected improvement in performance involves no longer creating proxies instances multiple times during the request lifecycle, and drastically reducing the amount of reflection code at runtime.  If you are extending one of the following SPIs:   * PolicySpi   * AdminRealmResourceSpi   * IdentityProviderSpi   * RealmResourceSPI  You should review your custom JAX-RS (sub)resources in order to obtain any contextual data as follows:  KeycloakSession session = org.keycloak.common.util.Resteasy.getContextData(KeycloakSession.class);  If you need access to the current request and response objects, you can now obtain their instances directly from the KeycloakSession:  @Context org.jboss.resteasy.spi.HttpRequest request; @Context org.jboss.resteasy.spi.HttpResponse response;  was replaced by:  KeycloakSession session = // obtain the session, which is usually available when creating a custom provider from a factory KeycloakContext context = session.getContext();  HttpRequest request = context.getHttpRequest(); HttpResponse response = context.getHttpResponse();  In case you have no access to a KeycloakSession instance when invoking a JAX-RS resource method, you can obtain contextual data from the JAX-RS runtime as follows:  KeycloakSession session = org.keycloak.common.util.Resteasy.getContextData(KeycloakSession.class);  Additional contextual data can be obtained from the runtime through the KeycloakContext instance:  KeycloakSession session = // obtain the session KeycloakContext context = session.getContext(); MyContextualObject myContextualObject = context.getContextObject(MyContextualObject.class);   UPGRADING YOUR CUSTOM JAX-RS RESOURCES  If you are extending the server’s REST APIs through the following SPIs:   * PolicySpi   * AdminRealmResourceSpi   * IdentityProviderSpi   * RealmResourceSPI  You need to add an empty META-INF/beans.xml to the JAR file where your custom providers are packaged. Otherwise, they are not recognized by the server at runtime.  You should also make sure your JAX-RS methods are declaring the expected media types for input and output by marking them with the @Consumes and @Produces annotations, respectively.   DEPRECATED METHODS FROM DATA PROVIDERS AND MODELS  In earlier versions of Keycloak, provider and model interfaces underwent a cleanup process that involved deprecating certain methods. In this release the methods were removed and some additional methods were deprecated. The Javadoc for these methods from Keycloak 21 included information about their corresponding replacements.   * RealmModel#searchForGroupByNameStream(String, Integer, Integer) was removed.   * UserProvider#getUsersStream(RealmModel, boolean) was removed.   * UserSessionPersisterProvider#loadUserSessions(int, int, boolean, int, String)    was removed.   * Interfaces added for Streamification work were removed. Such as    RoleMapperModel.Streams and similar.   * Streams interfaces in federated storage provider classes were deprecated.   * KeycloakModelUtils#getClientScopeMappings was removed.   * Deprecated methods from KeycloakSession were removed.   * UserQueryProvider#getUsersStream methods were removed.   MULTIPLE KEYCLOAK INSTANCES  Multiple Keycloak CRs may be created in the same namespace and will be managed independently by the operator. To allow for this StatefulSets created by older versions of the operator must be re-created. This will happen automatically when the operator is upgraded and lead to small amount of downtime.   K8S.KEYCLOAK.ORG/V2ALPHA1 CHANGES  The condition status field was changed from a boolean to a string for conformance with standard Kubernetes conditions. In the CRD it will temporarily be represented as accepting any content, but it will only ever be a string. Please make sure any of your usage of this field is updated to expect the values \"True\", \"False\", or \"Unknown\", rather than true or false.   KEYCLOAK SUPPORTS IPV4/IPV6 DUAL STACK  Keycloak supports the IPv4/IPv6 dual stack and can be accessible by default via the IPv4 and IPv6 addresses. In the older versions of Keycloak, the default approach was to use only IPv4 addresses.  For more details, see .   ALL RESOLVED ISSUES   NEW FEATURES   * Require user to agree to 'terms and conditions' during registration keycloak  * Securing credentials/passwords not possible with Quarkus distribution    keycloak dist/quarkus  * Enable Horizontal Pod Autoscaling for Keycloak deployed with the new Operator    keycloak  * Support OpenJDK 19 keycloak  * Hostname debug tool keycloak dist/quarkus  * Add Keycloak Keystore Vault implementation keycloak dist/quarkus  * Claim to User Session Note Idp Mapper keycloak oidc  * Supporting reference access/refresh tokens keycloak  * Allow changing admin console logo and favicon from theme.properties keycloak  * Group attribute query is missing QueryParams in java admin client keycloak    admin/client-java  * SSSD integration in Quarkus distribution keycloak  * Add support to the Operator for setting default labels on Keycloak pods    keycloak operator  * Support for JWE IDToken and UserInfo tokens in OIDC brokers keycloak    identity-brokering   ENHANCEMENTS   * Update QuickStarts documentation to Quarkus distribution keycloak-quickstarts  * Re-enable test that where disabled when updating test for the Quarkus dist    keycloak-quickstarts  * Nashorn dependency no longer needed in quickstarts keycloak-quickstarts  * Doublecheck \"provider\" quickstarts with quarkus3 based Keycloak distribution    keycloak-quickstarts  * user-storage-* provider quickstarts keycloak-quickstarts  * Event listener sysout quickstart keycloak-quickstarts  * Event store mem quickstart keycloak-quickstarts  * Extend-account-console quickstart keycloak-quickstarts  * Remove keycloak-remote profile keycloak-quickstarts  * Clarification on user registration and identity brokering    keycloak-documentation  * Reset Credentials Flow does not delete existing OTP keycloak authentication  * Remove any unnecessary dependency from distribution keycloak dist/quarkus  * OTP base32 decode improvements keycloak  * Expose deployment errors in the status field of Keycloak CR keycloak operator  * Support multiple KC instances in a single namespace keycloak operator  * Use SchemaSwap instead of shell script for Realm CRD generatio keycloak    operator  * Use Quarkus JOSDK to generate CSV for OLM in the operator keycloak operator  * Non ASCII characters in TOTP secret not supported in 2FA configurations    keycloak authentication  * Add support to indicate desired locale on init func with onLoad:    'login-required' options keycloak adapter/javascript  * Add a name to the keycloak port in the service keycloak  * Operator CRD status incompatible with kstatus keycloak operator  * Addition of Custom User Attribute Filter to Users API Count Endpoint keycloak  * Enable IPv6 dualstack support by default keycloak dist/quarkus  * Clean `RealmProvider` from methods from other areas keycloak storage  * Remove methods for old default roles approach keycloak storage  * Back to Application link should be client specific with the UPDATE_EMAIL    feature keycloak  * Support configurable custom Identity Providers keycloak  * Customize log messages for user storage LDAP configuration in KC shown in    admin UI keycloak  * Update migration guide with the changes that need to be done for developers    using JAX-RS in their extensions keycloak  * Update Datastore provider to contain full data model keycloak storage  * \"Failed to add user 'admin' ...\" should not be an ERROR keycloak dist/quarkus  * support parameters like \"uri\" and \"matchingUri\" in the UMA grant token    endpoint keycloak  * Group Attribute Search Erroneously returns when searching for nested group    keycloak storage  * Operator Support for missing leading slash and present trailing slash in    `http-relative-path` keycloak operator  * Add \"Enable new user after creation\" option for Active Directory keycloak  * Refine the set of RPMs included in the keycloak container image keycloak    dist/quarkus  * Minimize the RPM content of the Operator container keycloak operator  * CRDB optimization: Optimize selects targeting the primary key or unique keys    keycloak storage  * security enhancement : representation of admin events & credentials keycloak  * Migrate realms if configured to use RH-SSO themes keycloak  * Javascript example not printing errors keycloak docs  * Allow pre-filled GitHub issue forms via links from docs keycloak docs  * Add missing Spanish translations for login keycloak translations  * Add `lang` attribute to HTML tag of UIs keycloak account/ui  * Only add Access properties on groups, if the fine grain feature is on    keycloak  * Upgrading to Infinispan 14.0.8 keycloak  * Conditional login through identity provider keycloak  * account console v3 theme.properties customizations keycloak  * Correct formatting in Server Developer guide keycloak  * Adhere to HTML standard when using `ul`-element keycloak  * SSSD documentation updated for quarkus distribution keycloak  * SSSD testing with GH actions keycloak  * UserPropertyMapper generated exceptions on mapping keycloak  * Upgrade JNA library keycloak  * Client executor for reject implicit grant when enabled for clients keycloak    oidc  * Upgrade owasp html sanitizer to newest version keycloak  * Look ahead window setting in OTP policy is not accurate keycloak admin/ui  * Enable `simple-cache` for `local-cache` keycloak  * Move openshift client integration to separate extension keycloak core  * Move http-challenge authentication flow and the related authenticators to the    extension keycloak authentication  * Also run Cypress tests on Firefox keycloak testsuite  * Allow custom annotation in Ingress keycloak  * Show warning message when overriding build options during starts keycloak  * FAPI 2.0 security profile - not allow an authorization request whose    parameters were not included in PAR request keycloak  * Increase the length of password hash iterations password-policy input in    admin ui keycloak admin/ui  * Removing unnecessary message from main command help text keycloak  * FAPI 2.0 security profile - not allow an authorization request whose    parameters were not included in Request Object pushed to PAR request keycloak  * Add Hardcoded Group mapper to Identify Provider configuration keycloak  * Ability for users to view credentials without manage user permissions    keycloak admin/api  * Update docs (and maybe tooltips) for timeout changes keycloak docs  * Improve start page on the account ui keycloak account/ui  * Update securing_applications guide for latest adapter changes (community)    keycloak docs  * Allow any JGroups stack with --cache-stack keycloak  * Support for the `locale` user attribute keycloak  * Add missing Polish translations keycloak translations  * Remove adapters from product documentation keycloak docs  * Upgrade to Quarkus 3.2.0.Final keycloak  * Add `iat` claim to JWT that is passed to CIBA HttpAuthenticationChannel    keycloak  * When essential claim check fails the error message should provide detailed    information keycloak  * Enable publishNotReadyAddresses for discovery service keycloak   BUGS   * Quickstarts for action-token-authenticator / action-token-required-action not    working keycloak-quickstarts  * Legacy quickstart tests are failing since quarkus3 upgrade    keycloak-quickstarts  * Tests does not work on OpenJDK 17 for quickstarts keycloak-quickstarts  * Refresh token with offline_access scope affected by session idle/session max    keycloak oidc  * LDAPS Bind test fails with SSLHandshakeException while LDAP connection test    works keycloak ldap  * Unable to add more than 6 acceptable AAGUIDs for WebAuthn keycloak    authentication/webauthn  * User search with LDAP federation not consistent keycloak ldap  * SLO and ACS Binding are linked with AuthnRequest Binding in SAML Identity    Broker Metadata keycloak saml  * SSSD Federation fails with NPE after upgrade keycloak authentication  * Negative refresh token expiration (exp timestamp in the past) keycloak oidc  * KEYCLOAK-17116 Copy of Browser Flow overrides an original one keycloak    authentication  * Trust Store hostname-verification-policy=ANY seems to be ignored keycloak    docs  * Clearify the use of `db-url-properties` keycloak docs  * [keycloak-js] multiple init call with onload option as check-sso cause    redirects keycloak adapter/javascript  * importing bin/kc.[sh|bat] import --file doesn't work when using external    database keycloak dist/quarkus  * MigrationTest for KC 17 failures in the pipeline keycloak testsuite  * RecoveryAuthnCodesAuthenticatorTest failures in the pipeline keycloak    testsuite  * Switching Locale after Completing an admin triggered required action yields    an error keycloak authentication  * Client-secret with special character (+) for authorization is failing in    19.0.2 keycloak oidc  * ID token is not including roles keycloak oidc  * Realm update fails when realm has many Identity Providers configured and    saves rep. with Admin Events keycloak admin/api  * Client session lifespan doesn't consider user session lifespan keycloak    authentication  * User Session Note Mapper no longer adds IMPERSONATOR_USERNAME as SAML    attribute keycloak saml  * Able to modify built-in flow keycloak admin/api  * Unable to perform export when server was started with new storage keycloak    dist/quarkus  * Realm localization: Inconsistent message resolving regarding language    fallbacks for different themes keycloak core  * Incorrect Signature algorithms presented by Client Authenticator keycloak    oidc  * Keycloak Export only accept H2 datase-URL (Datasource: URL format error; must    be jdbc:h2 ... but is jdbc:mariadb: ...) keycloak dist/quarkus  * SSSD User Federation dissapeared in 20.0.1/20.0.2 keycloak authentication  * Set OpenShift as a \"Social Identity Provider\" cannot work keycloak    identity-brokering  * Single client export bug keycloak docs  * Hibernate 6 upgrade: Warning SqmDynamicInstantiation about dynamic Map    instantiation keycloak storage  * Quarkus 3: RealmModelTest.testRealmLocalizationTexts fails keycloak testsuite  * Setting user password and entering \"password confirmation\" first leads to    blocking of \"save\" keycloak admin/ui  * Impossible to update a federated user credential label keycloak admin/api  * Update documentation around `View all users` behavior in the new admin    console keycloak docs  * upgrading from v18.0.2 to 19.0.3 or 20.0.3 fails with ERROR duplicate key    value violates unique constraint \"constraint_3c\" keycloak core  * Theme & Provider folder empty in KeyCloak 20.0.3 keycloak docs  * New Referrer-policy breaks cross-origin SPIdP (KC) keycloak saml  * Make LDAP `searchForUsersStream` consistent with other storages keycloak    storage  * javax.net.ssl.SSLException exceptions because    org.keycloak.adapters.HttpClientBuilder ignores connectionTTL setting    keycloak oidc  * Error updating old version (Keycloak 8) to Keycloak 20. NPE thrown due the    realm.getDefaultRole() keycloak core  * Error: realms.removeSession wrong generic type keycloak admin/client-js  * Incorrect Url on Keycloak Health - Liveness and Readiness, no Startup Probes    keycloak operator  * `JpaUserProvider` count methods are inconsistent with `searchForUser`'s param    filter handling keycloak storage  * Memory issue with PathCache when running the traffic keycloak    authorization-services  * Report an issue link points to Jira instead of GHI keycloak docs  * Priority not sent to server when adding new RSA key provider keycloak    admin/ui  * Server Deployment documentation is not updated to Quarkus keycloak docs  * Slow Query Caused By Composite Indexes Order On Broker Link Table keycloak    storage  * User ID is ignored in partial import keycloak import-export  * Hibernate 6: Entity in Key not returned when querying keycloak storage  * Facebook identity provider not working keycloak identity-brokering  * SignatureProvider not showing up in the Default Signature Algorithm list    keycloak admin/ui  * Custom ResetCredentialEmail does not work after upgrade to Keycloak 21    keycloak core  * Account Console II doesn't remove TOTP from UserStorage keycloak account/api  * A way to override internal SPI after KC 21 keycloak core  * Custom User Storage Provider doesn't look up users after saving changes    keycloak admin/ui  * Gzip cache is only invalidated upon Keycloak version changes keycloak core  * AlreadyLoggedIn when impersonating a user in a SAML client keycloak core  * Operator restarts occasionally result in recreation of managed keycloak    Statefulset Pods keycloak operator  * Email settings erased after any change on realm settings keycloak admin/ui  * Documentation for User Storage Spi is incorrect keycloak storage  * Custom providers are not loaded properly in KC21 keycloak core  * Custom SignatureProviderFactory is not working as expected after Keycloak 21    upgrade keycloak core  * Testsuite must rely on IDs from Keycloak keycloak testsuite  * Support for realm-less entities in login failures keycloak storage  * NPE when updating a subflow in an authentication flow keycloak admin/api  * Incorrect HTTP status reported when DNS resolver is not available (and DB    connection unavailable due to that) keycloak core  * Admin UI does not respect default values for custom authenticator    configurations keycloak admin/ui  * Create a Client Policy on realm with client-roles or client-scopes condition    raises an expection on the Client details keycloak admin/ui  * Test app is not functioning - https://www.keycloak.org/app/ keycloak docs  * Account v3 - account console link redirect to master realm keycloak    account/ui  * New Flow created for Post Login Flow IDP not mark \"Used by\" at Flows keycloak    admin/ui  * Logout redirect URL truncated since v20 keycloak oidc  * User search with more than two keywords returns empty list keycloak storage  * Default Roles show all roles if \"Hide inherited roles\" is not checked    keycloak admin/ui  * Conditional user attribute authenticator does not match the joined groups    keycloak oidc  * authenticator javaScript Provider always failed the login, user context is    lost and break the login keycloak core  * Flaky test:    org.keycloak.testsuite.adapter.servlet.OfflineServletsAdapterTest#testServlet    keycloak ci  * Cannot find @Generated annotation for ServicesLogger keycloak dependencies  * Update passthrough behavior and docs keycloak dist/quarkus  * Conditionally build WildFly adapters for our testsuite keycloak testsuite  * Custom theme - url.resourcesCommonPath references wrong theme keycloak    admin/api  * FederatedUserLink always points to LDAP keycloak admin/ui  * Duplicated serverPrincipal property in LDAPStorageProviderFactory keycloak    storage  * Unable to template emails in EventListenerProvider (No realm in provided    KeycloakSession) keycloak authentication  * Support for non-XA databases keycloak storage  * User defined message bundles do not apply correctly to Admin Console keycloak    admin/ui  * Valid redirect URI & web origin input fields display when \"Standard flow\" is    disabled keycloak admin/ui  * Flaky test:    org.keycloak.testsuite.model.session.OfflineSessionPersistenceTest#testLazyClientSessionStatsFetching    keycloak ci  * Failing ExternalLinks tests for old Keycloak JIRA Links keycloak docs  * Quarkus 3 build properties break product build keycloak dist/quarkus  * Flaky test:    org.keycloak.testsuite.model.infinispan.CacheExpirationTest#testCacheExpiration    keycloak ci  * When choosing resources in scope-based permission, multiple resource can be    selected but only one will be visable keycloak admin/ui  * Additional Provider Info only shows at end of list not below provider    keycloak admin/ui  * Keycloak-js crasher: Missing null checks. Websites that have inline scripts    without a src attribute as src attributes are not required. keycloak    adapter/javascript  * Error 500 after signin to admin console: NullPointerException keycloak core  * WebAuthn test fails in the GHA keycloak testsuite  * keycloak-js-admin-client and keycloak-js-adapter do not build when a maven    proxy is configured keycloak  * Fix User Federation tests after Q3 upgrade keycloak testsuite  * Servlet tests for JBoss-based adapters with TLS are broken keycloak testsuite  * Productization issue related to JNA upgrade keycloak dependencies  * SAML error not shown to user keycloak admin/ui  * ClientScope changes don't invalidate the realm cache keycloak storage  * Administration / Keycloak Admin REST API documentation can no longer be    generated keycloak docs  * Avoid NPE while fetching offline sessions keycloak storage  * Changing the email address has no impact at username regardless \"Email as    username\" toggle keycloak user-profile  * Fix tests related to file storage keycloak testsuite  * Admin UI - unable to load user's groups when large number of groups defined    for the realm keycloak admin/ui  * When user federation is enabled, admin console user search doesn't show    search field keycloak admin/ui  * Enabled User Event Types not visible when \"Save events\" disabled. keycloak    admin/ui  * User events settings - \"Save events\" toggle doesn't always activate Save    button. keycloak admin/ui  * Ensure proper escaping for LDAP keycloak storage  * For versions > 18.x.x client mapper is not able to override \"name\" for OpenID    tokens keycloak oidc  * [Declarative User Profile] Optional attributes become required keycloak    admin/ui  * `register-node-at-startup` in EAP Client Adapter eventually causes    \"java.lang.OutOfMemoryError: unable to create native thread keycloak    adapter/jee  * Identity providers initialization has to use models keycloak storage  * Update example custom cache configuration for v>21 keycloak docs  * keycloak-admin-client does not url-encode client id and secret for basic auth    as defined in RFC6749 keycloak admin/client-js  * Introduced additional dependencies in the testsuite keycloak testsuite  * Moving a group to root loses all its members keycloak admin/ui  * FAPI 2.0 security profile - Reject Implicit Grant executor does not return an    appropriate error keycloak oidc  * Add back examples for Kubernetes and Openshift to the quickstarts keycloak    core  * Reset password does not show option to sign out from other devices keycloak    authentication  * Could not process response from SAML identity provider because \"this.text\" is    null keycloak identity-brokering  * Userinfo endpoint doesn't accept charset keycloak oidc  * Missing SAML Allow ECP Flow option keycloak admin/ui  * Selecting one mapper and switch page select them all keycloak admin/ui  * REST API Documentation ref wrong keycloak docs  * Realm export performance heavily depends on the amount of users per file    keycloak import-export  * Keycloak deployed via new keycloak-operator triggers OpenShift alert    `IngressWithoutClassName` keycloak operator  * Denial of Service/100% CPU usage: CRLUtils in infinite loop if more than one    CRL list is used from different CAs keycloak core  * Keycloak erases form data on validation when `login_hint` is present keycloak    account/ui  * SEND_RESET_PASSWORD event is not stored keycloak admin/api  * Mappers tab is not reachable on identity provider settings keycloak admin/ui  * Webauthn signature algorithms are improperly encoded as strings keycloak    authentication/webauthn  * There is no server side pagination for sessions keycloak admin/ui  * Private key JWT authentication no longer works on Keycloak 21 keycloak    authentication  * Empty shortVerificationUri not the same with default (null) value keycloak    authentication  * Session cross-reference / transaction mismatch keycloak core  * Emails with non-ascii characters are not allowed since v21.0.0 keycloak    user-profile  * Flaky test:    org.keycloak.operator.testsuite.integration.ClusteringTest#testKeycloakScaleAsExpected    keycloak operator  * Keycloak's default http client doesn't check HTTP response code keycloak core  * keycloak-server from testsuite won't start keycloak testsuite  * Partial Import is not working for resource Type in keycloak 21.1.1 keycloak    import-export  * Jump links render wrong on small screens keycloak admin/ui  * Performance degradation when upgrading from RHSSO 7.6 to KC22 caused by    TLSv1.3 processing keycloak dist/quarkus  * Avoid loading classes and resources from new store if legacy is enabled    keycloak storage  * NPE when shutting down JPA after a failed initialization keycloak storage  * processGrantRequest in TokenEndPoint uses new TokenManager instead of    this.tokenMananager keycloak oidc  * Custom User Storage Provider gets disabled when saved keycloak admin/ui  * Role details not visible unless the user has \"View Realm\" enabled keycloak    admin/ui  * Group list isn't filtered based on permission like user lists keycloak    admin/fine-grained-permissions  * Service Account Impersonation fails and results in weird browser state    keycloak core  * Client scopes mapping not available for users with \"view-clients\" and    \"query-clients\" keycloak admin/ui  * custom user storage provider update in admin-ui disables it, and stores value    “t” as enabled keycloak admin/ui  * GroupResource POST /children cannot update existing subgroups keycloak    admin/api  * Broken Links / Redirects Issues in Docs - 2023-06-27 keycloak docs  * UserSessionConcurrencyTest#testConcurrentNotesChange fails intermittently    keycloak testsuite  * UserSessionProviderModelTest#testRemoteCachesParallel sessions are not    removed after the test keycloak testsuite  * Keycloak Docs for Native App Redirect URI Should Recommend the IP literal    keycloak docs  * 3rd party check in iframe not working anymore in safari and keycloak 21.1.2    keycloak oidc  * [docs] External Links Errors - saml.xml.org http -> https redirect keycloak    docs  * List of tested database in docs doesn't match pom.xml keycloak docs  * NPE in Edit Identity Provider Mapper on second Save keycloak admin/ui  * SSSD users with capitals in the email cannot login to keycloak keycloak core  * JavascriptAdapterTest is broken due to the multiple initialization of JS    adapter keycloak testsuite  * Nexus staging plugin failing after Java 11 deprecation keycloak ci  * Cookie error on second browser tab keycloak core  * Quarkus 3.2 changed the property for    quarkus.transaction-manager.object-store-directory keycloak dist/quarkus  * Wrong message for sync actions on LDAP role mapper keycloak admin/ui   UPGRADING  Before you upgrade remember to backup your database and check the for anything that may have changed."
}